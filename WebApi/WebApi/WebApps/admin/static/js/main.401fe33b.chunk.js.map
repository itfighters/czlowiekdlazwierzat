{"version":3,"sources":["Utils/auth.js","Utils/helpers.js","config.js","service/auctionsService.js","Components/Auctions/List.js","Components/Auctions/add/PostForm.js","service/categoryService.js","Components/Auctions/add/AddForm.js","Components/Auctions/Add.js","service/notificationService.js","Components/Notifications/NotificationBox.js","Components/Notifications/Notifications.js","Components/Auctions/Edit.js","Components/Categories/List.js","Components/Categories/index.js","Components/Categories/CategoryForm.js","Components/Categories/EditDetails.js","Components/Categories/Add.js","Components/Header.js","Components/Admin.js","service/loginService.js","Components/Login.js","Components/ProtectedRoutes.js","Components/App.js","serviceWorker.js","index.js"],"names":["authTokenKey","isAuthenticated","token","localStorage","getItem","decodedToken","jwt","decode","expiry","exp","Date","getTime","mapInputsForPost","_ref","multichoiceCategories","checkboxKonto","adressStart","adressEnd","phone","dateStart","dateEnd","remaining","Object","objectWithoutProperties","objectSpread","categories","account","addressFrom","addressTo","contactNumber","dateFrom","toString","slice","dateTo","mapInputsFromPost","_ref2","convertDate","dateStr","API_URL","PlaceholderImg","BASE_URL","getDetails","id","url","URL","fetch","then","response","json","List","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showPage","page","pages","length","setState","loadAuctions","nextPage","state","previousPage","deleteClicked","toBeDeleted","deleteConfirmOpen","values","totalCount","pageSize","isLoading","inherits","createClass","key","value","_this2","react_default","a","createElement","Fragment","className","map","title","description","toLocaleDateString","publish","onClick","props","history","push","concat","bind","colSpan","Confirm","open","header","cancelButton","confirmButton","content","onCancel","onConfirm","deleteConfirm","_this3","params","keys","forEach","searchParams","append","method","headers","Content-Type","Authorization","getAuctions","pagesCount","i","_this4","deleteAuction","ok","toast","success","error","React","Component","PostForm","onChange","e","name","form","defineProperty","toggleChackBox","_ref3","checked","_ref4","formSubmitted","preventDefault","onSubmit","options","text","uploadImage","files","target","console","log","size","reader","FileReader","onloadend","_ref5","image","result","readAsDataURL","_this$props","isUpdate","duringUpload","uploadStatus","auction","siepomagaLink","getCurrentDate","getDefaultEndDate","featured","dotpay","paypall","date","setFullYear","getFullYear","_this$state$form","Form","style","marginBottom","Field","control","Input","label","placeholder","required","type","accept","Image","src","alt","wrapped","TextArea","Dropdown","fluid","multiple","selection","toggle","Checkbox","Group","widths","react_semantic_ui_datepickers_default","selected","onDateChange","undefined","minDate","Button","color","disabled","GetCategories","status","Error","Promise","resolve","AddCategory","category","body","JSON","stringify","EditCategory","AddForm","onSumbit","loading","editAuction","catch","err","creatAuction","auctionId","details","loaded","Dimmer","active","Loader","Grid","textAlign","verticalAlign","margintop","Column","maxWidth","Header","as","add_PostForm","Add","add_AddForm","notificationService","NotificationBox","confirmOpen","collapsed","notificationDetails","submitConfirmed","cursor","display","Message","Label","Icon","subscribed","alreadySent","monthlyLimit","Notifications","NotificationDetails","Sms","Push","Email","loadNotificationDetails","resp","Notifications_NotificationBox","confirmed","notificationType","Edit","match","Segment","Divider","horizontal","Notifications_Notifications","Number","confirmRemove","removeCategory","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","getCategories","t0","stop","allCategories","rows","Table","Row","Cell","react_router_dom","to","HeaderCell","Body","_callee4","_context4","abrupt","sent","Categories","Categories_List_List","CategoryForm","_this$state","EditDetails","_x","apply","arguments","categoryId","categoryDetails","_context2","CategoryForm_CategoryForm","ServiceAddCategory","href","primary","removeItem","window","location","Admin","Header_Header","react_router","exact","path","component","loginService","login","password","Login","logine","invalid_credentials","handleSubmit","assertThisInitialized","event","setItem","height","stacked","icon","iconPosition","ProtectedRoutes","rest","assign","render","pathname","from","App","react_toastify","Boolean","hostname","ReactDOM","Components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.401fe33b.chunk.js","sourcesContent":["import jwt from 'jsonwebtoken';\r\nexport const authTokenKey = 'AUTH_KEY';\r\n\r\nexport function isAuthenticated() {\r\n    let token = localStorage.getItem(authTokenKey);\r\n    if (!token)\r\n        return false;\r\n\r\n    let decodedToken = jwt.decode(token);\r\n    if (decodedToken) {\r\n        const expiry = decodedToken.exp;\r\n        const now = new Date();\r\n        return now.getTime() < expiry * 1000;\r\n    }\r\n\r\n    return false;\r\n}","export const mapInputsForPost = ({\r\n  multichoiceCategories,\r\n  checkboxKonto,\r\n  adressStart,\r\n  adressEnd,\r\n  phone,\r\n  dateStart,\r\n  dateEnd,\r\n  ...remaining\r\n}) => {\r\n  return {\r\n    categories: multichoiceCategories,\r\n    account: checkboxKonto,\r\n    addressFrom: adressStart,\r\n    addressTo: adressEnd,\r\n    contactNumber: phone,\r\n    dateFrom: dateStart.toString().slice(0, 24),\r\n    dateTo: dateEnd.toString().slice(0, 24),\r\n    ...remaining\r\n  };\r\n};\r\n\r\nexport const mapInputsFromPost = ({\r\n  categories,\r\n  account,\r\n  addressFrom,\r\n  addressTo,\r\n  contactNumber,\r\n  dateFrom,\r\n  dateTo,\r\n  ...remaining\r\n}) => {\r\n  return {\r\n    multichoiceCategories: categories,\r\n    checkboxKonto: account,\r\n    adressStart: addressFrom,\r\n    adressEnd: addressTo,\r\n    phone: contactNumber,\r\n    dateStart: convertDate(dateFrom),\r\n    dateEnd: convertDate(dateTo),\r\n    ...remaining\r\n  };\r\n};\r\n\r\nfunction convertDate(dateStr) {\r\n  if (!dateStr) {\r\n    return \"\";\r\n  }\r\n  var date = new Date(dateStr);\r\n  return date;\r\n}\r\n","export const API_URL = \"http://137.74.170.194/api/\";\r\n\r\nexport const PlaceholderImg =\r\n  \"http://www.workingthedoors.co.uk/wp-content/themes/petsitter/images/job-placeholder.gif\";\r\n","import { authTokenKey } from \"../Utils/auth\";\r\nimport { mapInputsForPost } from \"../Utils/helpers\";\r\nimport { API_URL } from \"../config\";\r\nconst BASE_URL = API_URL + \"auction\";\r\n\r\nexport function getAuctions(page, pageSize) {\r\n  var url = new URL(BASE_URL + \"/all\");\r\n  var params = { page, pageSize };\r\n  Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n\r\n  return fetch(url, {\r\n    method: \"get\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(authTokenKey)}`\r\n    }\r\n  });\r\n}\r\n\r\nexport function deleteAuction(id) {\r\n  var url = new URL(BASE_URL);\r\n  url.searchParams.append(\"id\", id);\r\n  return fetch(url, {\r\n    method: \"delete\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(authTokenKey)}`\r\n    }\r\n  });\r\n}\r\n\r\nexport function creatAuction(form) {\r\n  var url = new URL(BASE_URL);\r\n  return fetch(url, {\r\n    method: \"post\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(authTokenKey)}`\r\n    },\r\n    body: JSON.stringify(mapInputsForPost(form))\r\n  });\r\n}\r\n\r\nexport function editAuction(form) {\r\n  var url = new URL(BASE_URL);\r\n  return fetch(url, {\r\n    method: \"put\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(authTokenKey)}`\r\n    },\r\n    body: JSON.stringify(mapInputsForPost(form))\r\n  });\r\n}\r\n\r\nexport function getDetails(id) {\r\n  var url = new URL(BASE_URL);\r\n  return fetch(url + \"/details?Id=\" + id).then(response => response.json());\r\n}\r\n","import React from \"react\";\r\nimport { getAuctions, deleteAuction } from \"../../service/auctionsService\";\r\nimport { Confirm } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport class List extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      values: [],\r\n      totalCount: 0,\r\n      page: 1,\r\n      pageSize: 5,\r\n      isLoading: false,\r\n      deleteConfirmOpen: false,\r\n      toBeDeleted: null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <table className=\"ui celled padded table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"three wide\">Tytuł</th>\r\n              <th className=\"six wide\">Opis</th>\r\n              <th className=\"two wide\">Ważna od</th>\r\n              <th className=\"two wide\">Ważna do</th>\r\n              <th className=\"two wide\">Widoczne</th>\r\n              <th className=\"three wide\"></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.values.map(a => {\r\n              return (\r\n                <tr key={a.id}>\r\n                  <td>{a.title}</td>\r\n                  <td>{a.description}</td>\r\n                  <td>{new Date(a.dateFrom).toLocaleDateString()}</td>\r\n                  <td>{new Date(a.dateTo).toLocaleDateString()}</td>\r\n                  <td>{a.publish ? \"Tak\" : \"Nie\"}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"ui gray button\"\r\n                      onClick={() => {\r\n                        this.props.history.push(`/admin/edit/${a.id}`);\r\n                      }}\r\n                    >\r\n                      Edytuj\r\n                    </button>\r\n                    <button\r\n                      className=\"ui red button\"\r\n                      onClick={this.deleteClicked.bind(this, a.id)}\r\n                    >\r\n                      Usuń\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <th colSpan=\"5\">\r\n                <button\r\n                  className=\"ui blue button\"\r\n                  onClick={() => {\r\n                    this.props.history.push(`/admin/add`);\r\n                  }}\r\n                >\r\n                  Dodaj\r\n                </button>\r\n                <div className=\"ui right floated pagination menu\">\r\n                  <a className=\"icon item\" onClick={this.previousPage}>\r\n                    <i className=\"left chevron icon\"></i>\r\n                  </a>\r\n                  {this.pages()}\r\n                  <a className=\"icon item\" onClick={this.nextPage}>\r\n                    <i className=\"right chevron icon\"></i>\r\n                  </a>\r\n                </div>\r\n                <div className=\"ui label total\">\r\n                  Całkowita ilość: {this.state.totalCount}\r\n                </div>\r\n              </th>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n        <Confirm\r\n          open={this.state.deleteConfirmOpen}\r\n          header=\"Potwierdzenie\"\r\n          cancelButton=\"Anuluj\"\r\n          confirmButton=\"Potwierdź\"\r\n          content=\"Czy potwierdzasz usunięcie aukcji?\"\r\n          onCancel={() => {\r\n            this.setState({ toBeDeleted: null, deleteConfirmOpen: false });\r\n          }}\r\n          onConfirm={this.deleteConfirm.bind(this)}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadAuctions();\r\n  }\r\n\r\n  loadAuctions() {\r\n    this.setState({ isLoading: true });\r\n    getAuctions(this.state.page, this.state.pageSize)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        this.setState({ isLoading: false, ...response });\r\n      });\r\n  }\r\n\r\n  pages() {\r\n    var pages = [];\r\n    var pagesCount = this.state.totalCount / this.state.pageSize + 1;\r\n    for (var i = 1; i < pagesCount; i++) {\r\n      pages.push(\r\n        <a\r\n          key={i}\r\n          onClick={this.showPage.bind(this, i)}\r\n          className={this.state.page == i ? \"active item\" : \"item\"}\r\n        >\r\n          {i}\r\n        </a>\r\n      );\r\n    }\r\n    return pages;\r\n  }\r\n\r\n  showPage = page => {\r\n    if (page > 0 && page <= this.pages().length)\r\n      this.setState({ page: page }, this.loadAuctions);\r\n  };\r\n\r\n  nextPage = () => this.showPage(this.state.page + 1);\r\n  previousPage = () => this.showPage(this.state.page - 1);\r\n\r\n  deleteClicked = id =>\r\n    this.setState({\r\n      toBeDeleted: id,\r\n      deleteConfirmOpen: true\r\n    });\r\n\r\n  deleteConfirm() {\r\n    this.setState({ toBeDeleted: null, deleteConfirmOpen: false });\r\n    deleteAuction(this.state.toBeDeleted).then(response => {\r\n      if (response.ok) toast.success(\"Usunięcie powiodło się\");\r\n      else toast.error(\"Usunięcie nie powiodło się\");\r\n\r\n      this.loadAuctions();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  TextArea,\r\n  Input,\r\n  Checkbox,\r\n  Button,\r\n  Image,\r\n  Form,\r\n  Dropdown\r\n} from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\r\nimport \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\r\n\r\nclass PostForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { form, isUpdate } = this.props;\r\n    if (isUpdate) this.state = { form: { ...form } };\r\n    this.state = {\r\n      categories: [],\r\n      duringUpload: false,\r\n      uploadStatus: false\r\n    };\r\n    if (this.props.auction) {\r\n      this.state.form = { ...this.props.auction };\r\n    } else {\r\n      this.state.form = {\r\n        title: \"\",\r\n        image: null,\r\n        description: \"\",\r\n        multichoiceCategories: [],\r\n        siepomagaLink: \"\",\r\n        checkboxKonto: true,\r\n        dateStart: this.getCurrentDate(),\r\n        dateEnd: this.getDefaultEndDate(),\r\n        phone: \"\",\r\n        files: null,\r\n        featured: false,\r\n        publish: true,\r\n        dotpay: false,\r\n        paypall: false\r\n      };\r\n    }\r\n  }\r\n\r\n  getCurrentDate() {\r\n    return new Date();\r\n  }\r\n\r\n  getDefaultEndDate() {\r\n    var date = new Date();\r\n    date.setFullYear(date.getFullYear() + 1);\r\n\r\n    return date;\r\n  }\r\n\r\n  onChange = (e, { name, value }) => {\r\n    this.setState(({ form }) => ({ form: { ...form, [name]: value } }));\r\n  };\r\n\r\n  toggleChackBox = (e, { name, checked }) => {\r\n    this.setState(({ form }) => ({ form: { ...form, [name]: checked } }));\r\n  };\r\n\r\n  formSubmitted = e => {\r\n    e.preventDefault();\r\n    const { form } = this.state;\r\n    this.props.onSubmit(form);\r\n  };\r\n\r\n  options = [{ key: \"klucz\", text: \"nazwa\", value: \"wartosc\" }];\r\n\r\n  uploadImage = e => {\r\n    var maxImageMB = 10;\r\n    let maxImageSize = 1024 * 1024 * maxImageMB;\r\n    var files = e.target.files;\r\n    console.log(files[0]);\r\n    if (files[0].size > maxImageSize) {\r\n      toast.error(\r\n        `Zdjęcie jest za duże, maksymalny rozmiar zdjęcia to ${maxImageMB} MB`\r\n      );\r\n      return;\r\n    }\r\n    var reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      this.setState(({ form }) => ({\r\n        form: { ...form, image: reader.result }\r\n      }));\r\n    };\r\n    reader.readAsDataURL(files[0]);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      featured,\r\n      image,\r\n      description,\r\n      multichoiceCategories,\r\n      siepomagaLink,\r\n      checkboxKonto,\r\n      dateStart,\r\n      dateEnd,\r\n      publish,\r\n      dotpay,\r\n      paypall\r\n    } = this.state.form;\r\n\r\n    const { duringUpload } = this.state;\r\n    const { categories } = this.props;\r\n\r\n    return (\r\n      <Form onSubmit={this.formSubmitted} style={{ marginBottom: \"50px\" }}>\r\n        <Form.Field\r\n          control={Input}\r\n          name=\"title\"\r\n          label=\"Tytuł\"\r\n          placeholder=\"Tytuł\"\r\n          value={title}\r\n          onChange={this.onChange}\r\n          required\r\n        />\r\n        <Form.Field\r\n          label=\"Wybierz zdjęcie\"\r\n          control={Input}\r\n          placeholder=\"Zdjęcie...\"\r\n          name=\"pic\"\r\n          type=\"File\"\r\n          accept=\"image/*\"\r\n          onChange={this.uploadImage}\r\n        />\r\n        {image && (\r\n          <Form.Field>\r\n            <Image\r\n              src={image}\r\n              size=\"small\"\r\n              alt=\"wybrane zdjecie\"\r\n              wrapped\r\n              name=\"image\"\r\n              value={image}\r\n              onChange={this.onChange}\r\n            />\r\n          </Form.Field>\r\n        )}\r\n        <Form.Field\r\n          control={TextArea}\r\n          label=\"Opis\"\r\n          placeholder=\"Opis\"\r\n          name=\"description\"\r\n          value={description}\r\n          onChange={this.onChange}\r\n          required\r\n        />\r\n        <Form.Field\r\n          label=\"Wybierz kategorię\"\r\n          control={Dropdown}\r\n          placeholder=\"Kategorie\"\r\n          fluid\r\n          multiple\r\n          selection\r\n          options={categories}\r\n          name=\"multichoiceCategories\"\r\n          value={multichoiceCategories}\r\n          onChange={this.onChange}\r\n          required\r\n        />\r\n        <Form.Field\r\n          control={Input}\r\n          label=\"Link do siepomaga\"\r\n          placeholder=\"Link do siepomaga\"\r\n          name=\"siepomagaLink\"\r\n          value={siepomagaLink}\r\n          onChange={this.onChange}\r\n        />\r\n        <Form.Field\r\n          toggle\r\n          control={Checkbox}\r\n          label=\"Dotpay\"\r\n          name=\"dotpay\"\r\n          checked={dotpay}\r\n          onChange={this.toggleChackBox}\r\n        />{\" \"}\r\n        <Form.Field\r\n          toggle\r\n          control={Checkbox}\r\n          label=\"Paypall\"\r\n          name=\"paypall\"\r\n          checked={paypall}\r\n          onChange={this.toggleChackBox}\r\n        />\r\n        <Form.Group widths=\"equal\">\r\n          <SemanticDatepicker\r\n            label=\"Data początkowa\"\r\n            placeholder=\"Data początkowa\"\r\n            name=\"dateStart\"\r\n            selected={dateStart}\r\n            onDateChange={value => {\r\n              this.onChange(undefined, {\r\n                name: \"dateStart\",\r\n                value: value\r\n              });\r\n            }}\r\n            required\r\n          />\r\n          <SemanticDatepicker\r\n            label=\"Data końcowa\"\r\n            placeholder=\"Data końcowa\"\r\n            name=\"dateEnd\"\r\n            selected={dateEnd}\r\n            minDate={dateStart}\r\n            onDateChange={value => {\r\n              this.onChange(undefined, {\r\n                name: \"dateEnd\",\r\n                value\r\n              });\r\n            }}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Field\r\n          toggle\r\n          control={Checkbox}\r\n          label=\"Widoczne konto\"\r\n          name=\"checkboxKonto\"\r\n          checked={checkboxKonto}\r\n          onChange={this.toggleChackBox}\r\n        />\r\n        <Form.Field\r\n          toggle\r\n          control={Checkbox}\r\n          label=\"Widoczne publicznie\"\r\n          name=\"publish\"\r\n          checked={publish}\r\n          onChange={this.toggleChackBox}\r\n        />\r\n        <Form.Field\r\n          toggle\r\n          control={Checkbox}\r\n          name=\"featured\"\r\n          label=\"Wyróżniona zbiórka\"\r\n          checked={featured}\r\n          onChange={this.toggleChackBox}\r\n        />\r\n        <Button type=\"submit\" color=\"green\" size=\"big\" disabled={duringUpload}>\r\n          Wyślij{\" \"}\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostForm;\r\n","import { authTokenKey } from \"../Utils/auth\";\r\nimport { API_URL } from \"../config\";\r\nconst BASE_URL = API_URL + \"category\";\r\n\r\nexport function GetCategories() {\r\n  return fetch(`${BASE_URL}`).then(response => {\r\n    if (response.status !== 200) {\r\n      throw new Error(response.status);\r\n    }\r\n    return Promise.resolve(response.json());\r\n  });\r\n}\r\n\r\nexport function GetCategory(id) {\r\n  return fetch(`${BASE_URL}/details?id=${id}`).then(response => {\r\n    if (response.status !== 200) {\r\n      throw new Error(response.status);\r\n    }\r\n    return Promise.resolve(response.json());\r\n  });\r\n}\r\n\r\nexport function RemoveCategory(id) {\r\n  return fetch(`${BASE_URL}?id=${id}`, {\r\n    method: \"delete\"\r\n  }).then(response => {\r\n    if (response.status !== 200) {\r\n      throw new Error(response.status);\r\n    }\r\n    return Promise.resolve(response);\r\n  });\r\n}\r\n\r\nexport function AddCategory(category) {\r\n  var url = new URL(BASE_URL);\r\n  return fetch(url, {\r\n    method: \"post\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(authTokenKey)}`\r\n    },\r\n    body: JSON.stringify(category)\r\n  }).then(response => {\r\n    if (response.status !== 200) {\r\n      throw new Error(response.status);\r\n    }\r\n    return Promise.resolve(response);\r\n  });\r\n}\r\n\r\nexport function EditCategory(category) {\r\n  var url = new URL(BASE_URL);\r\n  return fetch(url, {\r\n    method: \"put\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(authTokenKey)}`\r\n    },\r\n    body: JSON.stringify(category)\r\n  }).then(response => {\r\n    if (response.status !== 200) {\r\n      throw new Error(response.status);\r\n    }\r\n    return Promise.resolve(response);\r\n  });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PostForm from \"./PostForm\";\r\nimport { Grid, Header, Dimmer, Loader } from \"semantic-ui-react\";\r\nimport {\r\n  creatAuction,\r\n  getDetails,\r\n  editAuction\r\n} from \"../../../service/auctionsService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { GetCategories } from \"../../../service/categoryService\";\r\nimport { mapInputsFromPost } from \"../../../Utils/helpers\";\r\nclass AddForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { auction: null, categories: [], loading: false };\r\n  }\r\n\r\n  onSumbit = form => {\r\n    this.setState({ loading: true });\r\n    if (!form.id) {\r\n      return creatAuction(form)\r\n        .then(response => {\r\n          if (response.status !== 200) {\r\n            throw new Error(response.status);\r\n          }\r\n          toast.success(\"Zbiórka została dodana\");\r\n          this.props.history.push(\"/admin\");\r\n        })\r\n        .catch(err => {\r\n          toast.error(\"Dodawanie nie powiodło się, spróbuj ponownie później\");\r\n        });\r\n    } else {\r\n      return editAuction(form)\r\n        .then(response => {\r\n          if (response.status !== 200) {\r\n            throw new Error(response.status);\r\n          }\r\n          toast.success(\"Zbiórka została zaktualizowana\");\r\n          this.props.history.push(\"/admin\");\r\n        })\r\n        .catch(err => {\r\n          toast.error(\r\n            \"Aktualizacja nie powiodła się, spróbuj ponownie później\"\r\n          );\r\n        });\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let { auctionId } = this.props;\r\n    if (auctionId) {\r\n      var details = await getDetails(auctionId);\r\n      this.setState({ auction: mapInputsFromPost(details) });\r\n    }\r\n\r\n    GetCategories().then(categories =>\r\n      this.setState({\r\n        loaded: true,\r\n        categories: categories.map(category => ({\r\n          key: category.id,\r\n          text: category.name,\r\n          value: category.id\r\n        }))\r\n      })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (\r\n      (this.props.auctionId && !this.state.auction) ||\r\n      this.state.categories.length === 0 ||\r\n      this.state.loading\r\n    ) {\r\n      return (\r\n        <Dimmer active>\r\n          <Loader>Loading</Loader>\r\n        </Dimmer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" margintop=\"10px\">\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as=\"h2\" color=\"black\" textAlign=\"center\">\r\n            {this.props.header}\r\n          </Header>\r\n          <PostForm\r\n            onSubmit={this.onSumbit}\r\n            auction={this.state.auction}\r\n            categories={this.state.categories}\r\n          />\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nexport default AddForm;\r\n","import React from \"react\";\r\nimport AddForm from \"./add/AddForm\";\r\n\r\nexport function Add({ history }) {\r\n  return <AddForm header={\"Dodaj nową zbiórkę\"} history={history} />;\r\n}\r\n","import { authTokenKey } from \"../Utils/auth\";\r\nimport { API_URL } from \"../config\";\r\nconst BASE_URL = API_URL + \"notification\";\r\n\r\nexport default {\r\n  sendNotification(auctionId, type) {\r\n    var url = new URL(BASE_URL);\r\n    return fetch(url, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${localStorage.getItem(authTokenKey)}`\r\n      },\r\n      body: JSON.stringify({ auctionId, type })\r\n    });\r\n  },\r\n  notificationsDetails(auctionId) {\r\n    var url = new URL(BASE_URL);\r\n    var params = { auctionId };\r\n    Object.keys(params).forEach(key =>\r\n      url.searchParams.append(key, params[key])\r\n    );\r\n\r\n    return fetch(url, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${localStorage.getItem(authTokenKey)}`\r\n      }\r\n    });\r\n  }\r\n};\r\n","import\r\n{\r\n  Button,\r\n  Grid,\r\n  Header,\r\n  Label,\r\n  Message,\r\n  Confirm,\r\n  Icon,\r\n} from 'semantic-ui-react';\r\nimport React, { Component } from 'react';\r\nimport notificationService from '../../service/notificationService';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass NotificationBox extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: true,\r\n      confirmOpen: false\r\n    };\r\n  }\r\n\r\n  render()\r\n  {\r\n    const { type, notificationDetails, submitConfirmed } = this.props;\r\n\r\n    return (\r\n      <Grid textAlign=\"center\">\r\n        <Grid.Column style={{ maxWidth: 500 }}>\r\n          <div style={{ 'cursor': 'pointer' }}>\r\n            <Header as=\"h4\" color=\"teal\" textAlign=\"center\" onClick={() => this.setState({ collapsed: !this.state.collapsed })}>\r\n              <p>Dodaj notyfikację {type} {this.state.collapsed}\r\n                <i className={\"angle icon \" + (this.state.collapsed ? 'down' : 'up')} />\r\n              </p>\r\n            </Header>\r\n          </div>\r\n          <div style={{ 'display': this.state.collapsed ? 'none' : 'block' }}>\r\n            <Message>\r\n              Prenumeratorzy notyfikacji {type}\r\n              <br />\r\n              <Label>\r\n                <Icon name=\"users\" />\r\n                {notificationDetails.subscribed != null ? notificationDetails.subscribed : 'obliczam...'}\r\n              </Label>\r\n            </Message>\r\n            <Message>\r\n              Liczba wysłanych notyfikacji {type} w tym miesiącu\r\n        <br />\r\n              <Label>\r\n                <Icon name=\"envelope open outline\" />\r\n                {notificationDetails.alreadySent != null && notificationDetails.monthlyLimit != null ?\r\n                  `${notificationDetails.alreadySent}/${notificationDetails.monthlyLimit}`\r\n                  : 'obliczam...'}\r\n              </Label>\r\n            </Message>\r\n            <Button\r\n              color=\"teal\"\r\n              fluid\r\n              size=\"large\"\r\n              onClick={() => this.onSubmit()}\r\n            >\r\n              Wyślij\r\n              </Button>\r\n          </div>\r\n        </Grid.Column>\r\n        <Confirm open={this.state.confirmOpen}\r\n          header={'Potwierdź'}\r\n          confirmButton={'Wyślij'}\r\n          cancelButton={'Anuluj'}\r\n          content={'Potwierdzasz wysłanie notyfikacji?'}\r\n          onCancel={() => this.setState({ confirmOpen: false })}\r\n          onConfirm={() =>\r\n          {\r\n            this.setState({ confirmOpen: false });\r\n            submitConfirmed();\r\n          }} />\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  onSubmit = () => this.setState({\r\n    confirmOpen: true\r\n  });\r\n}\r\n\r\nNotificationBox.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  submitConfirmed: PropTypes.func.isRequired,\r\n  notificationDetails: PropTypes.exact({\r\n    subscribed: PropTypes.number,\r\n    alreadySent: PropTypes.number,\r\n    monthlyLimit: PropTypes.number\r\n  })\r\n}\r\n\r\nexport default NotificationBox;\r\n\r\n","import React, { Component } from 'react';\r\nimport notificationService from '../../service/notificationService';\r\nimport PropTypes from 'prop-types';\r\nimport NotificationBox from './NotificationBox';\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default class Notifications extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            NotificationDetails: {\r\n                Sms: {\r\n                    alreadySent: null,\r\n                    monthlyLimit: null,\r\n                    subscribed: null\r\n                },\r\n                Push: {\r\n                    alreadySent: null,\r\n                    monthlyLimit: null,\r\n                    subscribed: null\r\n                },\r\n                Email: {\r\n                    alreadySent: null,\r\n                    monthlyLimit: null,\r\n                    subscribed: null\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount()\r\n    {\r\n        this.loadNotificationDetails();\r\n    }\r\n\r\n    loadNotificationDetails()\r\n    {\r\n        notificationService.notificationsDetails(this.props.auctionId)\r\n            .then(resp => resp.json())\r\n            .then(resp =>\r\n            {\r\n                this.setState({ NotificationDetails: resp });\r\n            });\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <React.Fragment>\r\n                <NotificationBox\r\n                    type={'SMS'}\r\n                    notificationDetails={this.state.NotificationDetails.Sms}\r\n                    submitConfirmed={() => { this.confirmed('sms') }} />\r\n                <NotificationBox\r\n                    type={'Email'}\r\n                    notificationDetails={this.state.NotificationDetails.Email}\r\n                    submitConfirmed={() => { this.confirmed('email') }} />\r\n                <NotificationBox\r\n                    type={'Push'}\r\n                    notificationDetails={this.state.NotificationDetails.Push}\r\n                    submitConfirmed={() => { this.confirmed('push') }} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    confirmed(notificationType)\r\n    {\r\n        notificationService.sendNotification(this.props.auctionId, notificationType)\r\n            .then(resp =>\r\n            {\r\n                if (resp.ok) {\r\n                    toast.success('Poprawnie dodano notyfikację');\r\n                }\r\n                else {\r\n                    toast.error('Dodanie notyfikacji nie powiodło się');\r\n                }\r\n                this.loadNotificationDetails();\r\n            });\r\n    }\r\n}\r\n\r\nNotifications.propTypes = {\r\n    auctionId: PropTypes.number.isRequired\r\n}","import React from \"react\";\r\nimport { Divider, Segment } from \"semantic-ui-react\";\r\nimport Notifications from \"../Notifications/Notifications\";\r\nimport AddForm from \"./add/AddForm\";\r\n\r\nexport function Edit({ match, history }) {\r\n  let auctionId = match.params.id;\r\n  return (\r\n    <Segment>\r\n      <AddForm\r\n        header={\"Edytuj danę zbiórki\"}\r\n        auctionId={auctionId}\r\n        history={history}\r\n      />\r\n      <Divider horizontal>Lub</Divider>\r\n      <Notifications auctionId={Number(match.params.id)} />\r\n    </Segment>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GetCategories, RemoveCategory } from \"../../service/categoryService\";\r\nimport { PlaceholderImg } from \"../../config\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Table, Icon, Image, Dimmer, Loader, Confirm } from \"semantic-ui-react\";\r\n\r\nexport default class List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: [],\r\n      loading: true,\r\n      toBeDeleted: null,\r\n      deleteConfirmOpen: false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      this.getCategories();\r\n    } catch (err) {\r\n      this.setState({ loading: false });\r\n      console.log(err);\r\n      toast.error(\r\n        \"Nie udało się pobrać listy kategoii, spróbuj ponownie później\"\r\n      );\r\n    }\r\n  }\r\n\r\n  async getCategories() {\r\n    this.setState({ loading: true });\r\n    var allCategories = await GetCategories();\r\n    this.setState({ categories: allCategories, loading: false });\r\n  }\r\n\r\n  confirmRemove = id => {\r\n    this.setState({ toBeDeleted: id, deleteConfirmOpen: true });\r\n  };\r\n\r\n  removeCategory = async () => {\r\n    try {\r\n      this.setState({ loading: true, deleteConfirmOpen: false });\r\n      await RemoveCategory(this.state.toBeDeleted);\r\n      this.setState({ toBeDeleted: null });\r\n      this.getCategories();\r\n    } catch (err) {\r\n      this.setState({\r\n        loading: false,\r\n        toBeDeleted: null,\r\n        deleteConfirmOpen: false\r\n      });\r\n      console.log(err);\r\n      toast.error(\r\n        \"Nie udało się pobrać listy kategoii, spróbuj ponownie później\"\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return (\r\n        <Dimmer active>\r\n          <Loader>Loading</Loader>\r\n        </Dimmer>\r\n      );\r\n    }\r\n\r\n    var rows = this.state.categories.map(category => (\r\n      <Table.Row key={`category-${category.id}`}>\r\n        <Table.Cell>{category.name}</Table.Cell>\r\n        <Table.Cell>\r\n          <Image src={category.image || PlaceholderImg} size=\"small\" />\r\n        </Table.Cell>\r\n        <Table.Cell>\r\n          <Link to={`category/${category.id}`}>\r\n            <button className=\"ui gray button\">\r\n              <Icon name=\"edit\" />\r\n              Edytuj\r\n            </button>\r\n          </Link>\r\n          <button\r\n            className=\"ui red button\"\r\n            onClick={() => this.confirmRemove(category.id)}\r\n          >\r\n            <Icon name=\"trash\" />\r\n            Usuń\r\n          </button>\r\n        </Table.Cell>\r\n      </Table.Row>\r\n    ));\r\n    return (\r\n      <>\r\n        <Link to=\"categories/add\">\r\n          <button className=\"ui blue button\">\r\n            <Icon name=\"add\" />\r\n            dodaj\r\n          </button>\r\n        </Link>\r\n\r\n        <Table>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Nazwa</Table.HeaderCell>\r\n              <Table.HeaderCell>Zdjęcie</Table.HeaderCell>\r\n              <Table.HeaderCell>Akcje</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>{rows}</Table.Body>\r\n        </Table>\r\n        <Confirm\r\n          open={this.state.deleteConfirmOpen}\r\n          header=\"Potwierdzenie\"\r\n          cancelButton=\"Anuluj\"\r\n          confirmButton=\"Potwierdź\"\r\n          content=\"Czy potwierdzasz usunięcie kategorii?\"\r\n          onCancel={() => {\r\n            this.setState({ toBeDeleted: null, deleteConfirmOpen: false });\r\n          }}\r\n          onConfirm={async () => await this.removeCategory()}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport List from \"./List\";\r\nexport default class Categories extends Component {\r\n  render() {\r\n    return <List />;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form, Input, Image } from \"semantic-ui-react\";\r\nimport { PlaceholderImg } from \"../../config\";\r\n\r\nexport default class CategoryForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (this.props.category) {\r\n      this.state = {\r\n        name: this.props.category.name,\r\n        image: this.props.category.image\r\n      };\r\n    } else {\r\n      this.state = { name: \"\", image: \"\" };\r\n    }\r\n  }\r\n\r\n  uploadImage = e => {\r\n    var files = e.target.files;\r\n    var reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        image: reader.result\r\n      });\r\n    };\r\n    reader.readAsDataURL(files[0]);\r\n  };\r\n\r\n  formSubmitted = e => {\r\n    e.preventDefault();\r\n    var category = {\r\n      id: this.state.id,\r\n      name: this.state.name,\r\n      image: this.state.image\r\n    };\r\n    this.props.onSubmit(category);\r\n  };\r\n\r\n  onChange = (e, { name, value }) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { image, name } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.formSubmitted}>\r\n        <Form.Field\r\n          label=\"Nazwa kategorii:\"\r\n          value={name}\r\n          control={Input}\r\n          placeholder=\"Nazwa...\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          onChange={this.onChange}\r\n        />\r\n        <Form.Field\r\n          label=\"Wybierz zdjęcie\"\r\n          control={Input}\r\n          placeholder=\"Zdjęcie...\"\r\n          name=\"pic\"\r\n          type=\"File\"\r\n          accept=\"image/*\"\r\n          onChange={this.uploadImage}\r\n        />\r\n        {image && (\r\n          <Form.Field>\r\n            <Image\r\n              src={image || PlaceholderImg}\r\n              size=\"medium\"\r\n              alt=\"wybrane zdjecie\"\r\n              wrapped\r\n              name=\"image\"\r\n              value={image}\r\n              onChange={this.onChange}\r\n            />\r\n          </Form.Field>\r\n        )}\r\n\r\n        <Button type=\"submit\" color=\"green\" size=\"big\">\r\n          Wyślij{\" \"}\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { GetCategory, EditCategory } from \"../../service/categoryService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\nimport CategoryForm from \"./CategoryForm\";\r\n\r\nexport default class EditDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { category: null, loading: true };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      var categoryId = this.props.match.params.id;\r\n      var categoryDetails = await GetCategory(categoryId);\r\n      this.setState({\r\n        category: categoryDetails,\r\n        loading: false\r\n      });\r\n    } catch (err) {\r\n      this.setState({ loading: false });\r\n      console.log(err);\r\n      toast.error(\r\n        \"Nie udało się pobrać listy kategoii, spróbuj ponownie później\"\r\n      );\r\n    }\r\n  }\r\n\r\n  onSubmit = async category => {\r\n    try {\r\n      this.setState({ loading: true });\r\n      category.id = this.state.category.id;\r\n      await EditCategory(category);\r\n      this.setState({ loading: false });\r\n      toast.success(\"Aktualizacja zakończona pomyślnie\");\r\n      this.props.history.push(\"/admin/categories\");\r\n    } catch (err) {\r\n      this.setState({ loading: false });\r\n      toast.error(\r\n        \"Nie udało się zaktualizować kategorii, spróbuj ponownie później\"\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return (\r\n        <Dimmer active>\r\n          <Loader>Loading</Loader>\r\n        </Dimmer>\r\n      );\r\n    }\r\n    return (\r\n      <CategoryForm onSubmit={this.onSubmit} category={this.state.category} />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport CategoryForm from \"./CategoryForm\";\r\nimport { AddCategory as ServiceAddCategory } from \"../../service/categoryService\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default class AddCategory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { loading: false };\r\n  }\r\n\r\n  onSubmit = async category => {\r\n    try {\r\n      this.setState({ loading: true });\r\n      await ServiceAddCategory(category);\r\n      this.setState({ loading: false });\r\n      toast.success(\"Kategoria została dodana\");\r\n      this.props.history.push(\"/admin/categories\");\r\n    } catch (err) {\r\n      this.setState({ loading: false });\r\n      toast.error(\"Nie udało się dodać kategorii, spróbuj ponownie później\");\r\n    }\r\n  };\r\n  render() {\r\n    if (this.state.loading) {\r\n      return (\r\n        <Dimmer active>\r\n          <Loader>Loading</Loader>\r\n        </Dimmer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <CategoryForm onSubmit={this.onSubmit} category={this.state.category} />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { authTokenKey } from '../Utils/auth';\r\nexport function Header()\r\n{\r\n    function logout()\r\n    {\r\n        localStorage.removeItem(authTokenKey);\r\n        window.location.href = '/login';\r\n    }\r\n\r\n    return (\r\n        <div className=\"ui menu menu-container\">\r\n            <div className=\"left\">\r\n                <div className=\"header item\">\r\n                    Panel administracyjny\r\n            </div>\r\n                <a className=\"item\" href=\"/admin/list\">\r\n                    Zbiórki\r\n                </a>\r\n                <a className=\"item\" href=\"/admin/categories\">\r\n                    Kategorie\r\n                </a>\r\n            </div>\r\n            <div className=\"right\">\r\n                <Button primary onClick={() => logout()}>Wyloguj</Button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { List } from \"./Auctions/List\";\r\nimport { Add } from \"./Auctions/Add\";\r\nimport { Edit } from \"./Auctions/Edit\";\r\nimport Categories from \"./Categories\";\r\nimport EditDetails from \"./Categories/EditDetails\";\r\nimport AddCategory from \"./Categories/Add\";\r\nimport { Header } from \"./Header\";\r\n\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nexport function Admin() {\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      <Router>\r\n        <Route exact path=\"/admin\" component={List} />\r\n        <Route path=\"/admin/list\" component={List} />\r\n        <Route path=\"/admin/add\" component={Add} />\r\n        <Route path=\"/admin/edit/:id\" component={Edit} />\r\n        <Route path=\"/admin/categories\" exact component={Categories} />\r\n        <Route path=\"/admin/category/:id\" exact component={EditDetails} />\r\n        <Route path=\"/admin/categories/add\" exact component={AddCategory} />\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n","import { API_URL } from \"../config\";\r\nconst BASE_URL = API_URL + \"user/validate\";\r\n\r\nexport default {\r\n  sendLogUser(login, password) {\r\n    return fetch(BASE_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ login, password })\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Button, Form, Grid, Message, Header, Segment } from 'semantic-ui-react'\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\nimport loginService from '../service/loginService';\r\nimport { authTokenKey, isAuthenticated } from '../Utils/auth';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            logine: '',\r\n            password: '',\r\n            invalid_credentials: false\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        loginService.sendLogUser(this.state.login, this.state.password)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                if (response.token) {\r\n                    localStorage.setItem(authTokenKey, response.token);\r\n                    this.props.history.push('/admin/list');\r\n                }\r\n                else {\r\n                    this.setState({ invalid_credentials: true });\r\n                    toast.error(\"Błędne dane logowania\");\r\n                }\r\n            })\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        if (isAuthenticated()) {\r\n            this.props.history.push('/admin/list');\r\n            return null;\r\n        }\r\n        return (\r\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <Header as='h2' color='black' textAlign='center'>\r\n                        Zaloguj się jako administrator:\r\n                    </Header>\r\n                    <Form size='large'>\r\n                        <Segment stacked>\r\n                            <Form.Input\r\n                                fluid icon=\"user\"\r\n                                iconPosition='left'\r\n                                placeholder='Wprowadź login'\r\n                                type='text'\r\n                                value={this.state.login}\r\n                                onChange={(e) => { this.setState({ login: e.target.value }) }}\r\n                            />\r\n                            <Form.Input\r\n                                fluid icon=\"lock\"\r\n                                iconPosition='left'\r\n                                placeholder='Wprowadź hasło'\r\n                                type='password'\r\n                                value={this.state.password}\r\n                                onChange={(e) => { this.setState({ password: e.target.value }) }}\r\n                            />\r\n                            <Button onClick={this.handleSubmit} color='black' fluid size='large'>\r\n                                Zaloguj\r\n                             </Button>\r\n                        </Segment>\r\n                    </Form>\r\n                    <Message>\r\n                        Nie jesteś administratorem? <Link to={`/`}>Wróć na stronę główną</Link>\r\n                    </Message>\r\n                </Grid.Column>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nexport default Login;","import React from 'react';\r\nimport {isAuthenticated} from '../Utils/auth';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport function ProtectedRoutes({ component: Component, ...rest })\r\n{\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                isAuthenticated() ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: props.location }\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Admin } from \"./Admin\";\r\nimport Login from \"./Login\";\r\nimport { ProtectedRoutes } from \"./ProtectedRoutes\";\r\nimport \"../Styles/App.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <ToastContainer />\r\n      <div>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/\" exact component={Login} />\r\n        <ProtectedRoutes path=\"/admin\" component={Admin} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}