{"version":3,"sources":["Utils/auth.js","Utils/helpers.js","config.js","service/auctionsService.js","Components/Auctions/List.js","Components/Auctions/add/PostForm.js","service/categoryService.js","Components/Auctions/add/AddForm.js","Components/Auctions/Add.js","service/notificationService.js","Components/Notifications/NotificationBox.js","Components/Notifications/Notifications.js","Components/Auctions/Edit.js","Components/Categories/List.js","Components/Categories/index.js","Components/Categories/CategoryForm.js","Components/Categories/EditDetails.js","Components/Categories/Add.js","Components/Header.js","Components/Admin.js","service/loginService.js","Components/Login.js","Components/ProtectedRoutes.js","Components/App.js","serviceWorker.js","index.js"],"names":["authTokenKey","isAuthenticated","token","localStorage","getItem","decodedToken","jwt","decode","expiry","exp","Date","getTime","mapInputsFromPost","_ref2","categories","account","addressFrom","addressTo","contactNumber","dateFrom","dateTo","remaining","Object","objectWithoutProperties","objectSpread","multichoiceCategories","checkboxKonto","adressStart","adressEnd","phone","dateStart","convertDate","dateEnd","dateStr","API_URL","IMAGES_URL","PlaceholderImg","BASE_URL","getDetails","id","url","URL","fetch","then","response","json","List","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showPage","page","pages","length","setState","loadAuctions","nextPage","state","previousPage","deleteClicked","toBeDeleted","deleteConfirmOpen","values","totalCount","pageSize","isLoading","inherits","createClass","key","value","_this2","react_default","a","createElement","Fragment","className","map","title","description","toLocaleDateString","publish","onClick","props","history","push","concat","bind","colSpan","Confirm","open","header","cancelButton","confirmButton","content","onCancel","onConfirm","deleteConfirm","_this3","params","keys","forEach","searchParams","append","method","headers","Content-Type","Authorization","getAuctions","pagesCount","i","_this4","deleteAuction","ok","toast","success","error","React","Component","PostForm","onChange","e","_ref","name","form","defineProperty","toggleChackBox","_ref3","checked","_ref4","formSubmitted","preventDefault","onSubmit","options","text","uploadImage","files","target","console","log","size","reader","FileReader","onloadend","_ref5","image","result","cover","readAsDataURL","_this$props","isUpdate","duringUpload","uploadStatus","auction","shortDescription","siepomagaLink","getCurrentDate","getDefaultEndDate","featured","dotpay","paypall","currentImage","date","setFullYear","getFullYear","_this$state$form","Form","style","marginBottom","Field","control","Input","label","placeholder","maxLength","required","type","accept","Image","src","alt","wrapped","TextArea","Dropdown","fluid","multiple","selection","toggle","Checkbox","Group","widths","react_semantic_ui_datepickers_default","selected","onDateChange","undefined","minDate","Button","color","disabled","GetCategories","status","Error","Promise","resolve","AddCategory","category","formData","FormData","body","EditCategory","AddForm","onSumbit","loading","editAuction","catch","err","creatAuction","auctionId","details","loaded","Dimmer","active","Loader","Grid","textAlign","verticalAlign","margintop","Column","maxWidth","Header","as","add_PostForm","Add","add_AddForm","notificationService","JSON","stringify","NotificationBox","confirmOpen","collapsed","notificationDetails","submitConfirmed","cursor","display","Message","Label","Icon","subscribed","alreadySent","monthlyLimit","Notifications","NotificationDetails","Sms","Push","Email","loadNotificationDetails","resp","Notifications_NotificationBox","confirmed","notificationType","Edit","match","Segment","Divider","horizontal","Notifications_Notifications","Number","confirmRemove","removeCategory","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","getCategories","t0","stop","allCategories","rows","Table","Row","Cell","react_router_dom","to","HeaderCell","Body","_callee4","_context4","abrupt","sent","Categories","Categories_List_List","CategoryForm","_this$state","EditDetails","_x","apply","arguments","categoryId","categoryDetails","_context2","CategoryForm_CategoryForm","ServiceAddCategory","href","primary","removeItem","window","location","Admin","Header_Header","react_router","exact","path","component","loginService","login","password","Login","logine","invalid_credentials","handleSubmit","assertThisInitialized","event","setItem","height","stacked","icon","iconPosition","ProtectedRoutes","rest","assign","render","pathname","from","App","react_toastify","Boolean","hostname","ReactDOM","Components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd07290a.chunk.js","sourcesContent":["import jwt from 'jsonwebtoken';\r\nexport const authTokenKey = 'AUTH_KEY';\r\n\r\nexport function isAuthenticated() {\r\n    let token = localStorage.getItem(authTokenKey);\r\n    if (!token)\r\n        return false;\r\n\r\n    let decodedToken = jwt.decode(token);\r\n    if (decodedToken) {\r\n        const expiry = decodedToken.exp;\r\n        const now = new Date();\r\n        return now.getTime() < expiry * 1000;\r\n    }\r\n\r\n    return false;\r\n}","export const mapInputsForPost = ({\r\n  multichoiceCategories,\r\n  checkboxKonto,\r\n  adressStart,\r\n  adressEnd,\r\n  phone,\r\n  dateStart,\r\n  dateEnd,\r\n  ...remaining\r\n}) => {\r\n  return {\r\n    categories: multichoiceCategories,\r\n    account: checkboxKonto,\r\n    addressFrom: adressStart,\r\n    addressTo: adressEnd,\r\n    contactNumber: phone,\r\n    dateFrom: dateStart.toString().slice(0, 24),\r\n    dateTo: dateEnd.toString().slice(0, 24),\r\n    ...remaining\r\n  };\r\n};\r\n\r\nexport const mapInputsFromPost = ({\r\n  categories,\r\n  account,\r\n  addressFrom,\r\n  addressTo,\r\n  contactNumber,\r\n  dateFrom,\r\n  dateTo,\r\n  ...remaining\r\n}) => {\r\n  return {\r\n    multichoiceCategories: categories,\r\n    checkboxKonto: account,\r\n    adressStart: addressFrom,\r\n    adressEnd: addressTo,\r\n    phone: contactNumber,\r\n    dateStart: convertDate(dateFrom),\r\n    dateEnd: convertDate(dateTo),\r\n    ...remaining\r\n  };\r\n};\r\n\r\nfunction convertDate(dateStr) {\r\n  if (!dateStr) {\r\n    return \"\";\r\n  }\r\n  var date = new Date(dateStr);\r\n  return date;\r\n}\r\n","export const API_URL = \"https://pomagalnia.pl/api/\";\r\nexport const IMAGES_URL = \"https://pomagalnia.pl/images\";\r\nexport const PlaceholderImg =\r\n  \"http://www.workingthedoors.co.uk/wp-content/themes/petsitter/images/job-placeholder.gif\";\r\n","import { authTokenKey } from \"../Utils/auth\";\r\nimport { mapInputsForPost } from \"../Utils/helpers\";\r\nimport { API_URL } from \"../config\";\r\nconst BASE_URL = API_URL + \"auction\";\r\n\r\nexport function getAuctions(page, pageSize) {\r\n  var url = new URL(BASE_URL + \"/all\");\r\n  var params = { page, pageSize };\r\n  Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n\r\n  return fetch(url, {\r\n    method: \"get\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(authTokenKey)}`\r\n    }\r\n  });\r\n}\r\n\r\nexport function deleteAuction(id) {\r\n  var url = new URL(BASE_URL);\r\n  url.searchParams.append(\"id\", id);\r\n  return fetch(url, {\r\n    method: \"delete\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(authTokenKey)}`\r\n    }\r\n  });\r\n}\r\n\r\nexport function creatAuction(form) {\r\n  var url = new URL(BASE_URL);\r\n  var formData = new FormData();\r\n\r\n  for (var name in form) {\r\n    formData.append(name, form[name]);\r\n  }\r\n\r\n  return fetch(url, {\r\n    method: \"post\",\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(authTokenKey)}`\r\n    },\r\n    body: formData\r\n  });\r\n}\r\n\r\nexport function editAuction(form) {\r\n  var url = new URL(BASE_URL);\r\n  var formData = new FormData();\r\n\r\n  for (var name in form) {\r\n    formData.append(name, form[name]);\r\n  }\r\n\r\n  return fetch(url, {\r\n    method: \"put\",\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(authTokenKey)}`\r\n    },\r\n    body: formData\r\n  });\r\n}\r\n\r\nexport function getDetails(id) {\r\n  var url = new URL(BASE_URL);\r\n  return fetch(url + \"/details?Id=\" + id).then(response => response.json());\r\n}\r\n","import React from \"react\";\r\nimport { getAuctions, deleteAuction } from \"../../service/auctionsService\";\r\nimport { Confirm } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport class List extends React.Component\r\n{\r\n  constructor()\r\n  {\r\n    super();\r\n    this.state = {\r\n      values: [],\r\n      totalCount: 0,\r\n      page: 1,\r\n      pageSize: 5,\r\n      isLoading: false,\r\n      deleteConfirmOpen: false,\r\n      toBeDeleted: null\r\n    };\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <React.Fragment>\r\n        <table className=\"ui celled padded table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"two wide\">Tytuł</th>\r\n              <th className=\"four wide\">Opis</th>\r\n              <th className=\"two wide\">Ważna od</th>\r\n              <th className=\"two wide\">Ważna do</th>\r\n              <th className=\"two wide\">Widoczne</th>\r\n              <th className=\"two wide\"></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.values.map(a =>\r\n            {\r\n              return (\r\n                <tr key={a.id}>\r\n                  <td>{a.title}</td>\r\n                  <td>{a.description}</td>\r\n                  <td>{new Date(a.dateFrom).toLocaleDateString()}</td>\r\n                  <td>{new Date(a.dateTo).toLocaleDateString()}</td>\r\n                  <td>{a.publish ? \"Tak\" : \"Nie\"}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"ui gray button\"\r\n                      onClick={() =>\r\n                      {\r\n                        this.props.history.push(`/admin/edit/${a.id}`);\r\n                      }}\r\n                    >\r\n                      Edytuj\r\n                    </button>\r\n                    <button\r\n                      className=\"ui red button\"\r\n                      onClick={this.deleteClicked.bind(this, a.id)}\r\n                    >\r\n                      Usuń\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <th colSpan=\"6\">\r\n                <button\r\n                  className=\"ui blue button\"\r\n                  onClick={() =>\r\n                  {\r\n                    this.props.history.push(`/admin/add`);\r\n                  }}\r\n                >\r\n                  Dodaj\r\n                </button>\r\n                <div className=\"ui right floated pagination menu\">\r\n                  <a className=\"icon item\" onClick={this.previousPage}>\r\n                    <i className=\"left chevron icon\"></i>\r\n                  </a>\r\n                  {this.pages()}\r\n                  <a className=\"icon item\" onClick={this.nextPage}>\r\n                    <i className=\"right chevron icon\"></i>\r\n                  </a>\r\n                </div>\r\n                <div className=\"ui label total\">\r\n                  Całkowita ilość: {this.state.totalCount}\r\n                </div>\r\n              </th>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n        <Confirm\r\n          open={this.state.deleteConfirmOpen}\r\n          header=\"Potwierdzenie\"\r\n          cancelButton=\"Anuluj\"\r\n          confirmButton=\"Potwierdź\"\r\n          content=\"Czy potwierdzasz usunięcie aukcji?\"\r\n          onCancel={() =>\r\n          {\r\n            this.setState({ toBeDeleted: null, deleteConfirmOpen: false });\r\n          }}\r\n          onConfirm={this.deleteConfirm.bind(this)}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    this.loadAuctions();\r\n  }\r\n\r\n  loadAuctions()\r\n  {\r\n    this.setState({ isLoading: true });\r\n    getAuctions(this.state.page, this.state.pageSize)\r\n      .then(response => response.json())\r\n      .then(response =>\r\n      {\r\n        this.setState({ isLoading: false, ...response });\r\n      });\r\n  }\r\n\r\n  pages()\r\n  {\r\n    var pages = [];\r\n    var pagesCount = this.state.totalCount / this.state.pageSize + 1;\r\n    for (var i = 1; i < pagesCount; i++) {\r\n      pages.push(\r\n        <a\r\n          key={i}\r\n          onClick={this.showPage.bind(this, i)}\r\n          className={this.state.page == i ? \"active item\" : \"item\"}\r\n        >\r\n          {i}\r\n        </a>\r\n      );\r\n    }\r\n    return pages;\r\n  }\r\n\r\n  showPage = page =>\r\n  {\r\n    if (page > 0 && page <= this.pages().length)\r\n      this.setState({ page: page }, this.loadAuctions);\r\n  };\r\n\r\n  nextPage = () => this.showPage(this.state.page + 1);\r\n  previousPage = () => this.showPage(this.state.page - 1);\r\n\r\n  deleteClicked = id =>\r\n    this.setState({\r\n      toBeDeleted: id,\r\n      deleteConfirmOpen: true\r\n    });\r\n\r\n  deleteConfirm()\r\n  {\r\n    this.setState({ toBeDeleted: null, deleteConfirmOpen: false });\r\n    deleteAuction(this.state.toBeDeleted).then(response =>\r\n    {\r\n      if (response.ok) toast.success(\"Usunięcie powiodło się\");\r\n      else toast.error(\"Usunięcie nie powiodło się\");\r\n\r\n      this.loadAuctions();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  TextArea,\r\n  Input,\r\n  Checkbox,\r\n  Button,\r\n  Image,\r\n  Form,\r\n  Dropdown\r\n} from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\r\nimport \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\r\nimport { IMAGES_URL } from \"../../../config\";\r\n\r\nclass PostForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { form, isUpdate } = this.props;\r\n    if (isUpdate) this.state = { form: { ...form } };\r\n    this.state = {\r\n      categories: [],\r\n      duringUpload: false,\r\n      uploadStatus: false\r\n    };\r\n    if (this.props.auction) {\r\n      this.state.form = { ...this.props.auction };\r\n    } else {\r\n      this.state.form = {\r\n        title: \"\",\r\n        shortDescription: \"\",\r\n        image: null,\r\n        description: \"\",\r\n        multichoiceCategories: [],\r\n        siepomagaLink: \"\",\r\n        checkboxKonto: true,\r\n        dateStart: this.getCurrentDate(),\r\n        dateEnd: this.getDefaultEndDate(),\r\n        phone: \"\",\r\n        files: null,\r\n        featured: false,\r\n        publish: true,\r\n        dotpay: false,\r\n        paypall: false,\r\n        currentImage: null\r\n      };\r\n    }\r\n  }\r\n\r\n  getCurrentDate() {\r\n    return new Date();\r\n  }\r\n\r\n  getDefaultEndDate() {\r\n    var date = new Date();\r\n    date.setFullYear(date.getFullYear() + 1);\r\n\r\n    return date;\r\n  }\r\n\r\n  onChange = (e, { name, value }) => {\r\n    this.setState(({ form }) => ({ form: { ...form, [name]: value } }));\r\n  };\r\n\r\n  toggleChackBox = (e, { name, checked }) => {\r\n    this.setState(({ form }) => ({ form: { ...form, [name]: checked } }));\r\n  };\r\n\r\n  formSubmitted = e => {\r\n    e.preventDefault();\r\n    const { form } = this.state;\r\n    this.props.onSubmit(form);\r\n  };\r\n\r\n  options = [{ key: \"klucz\", text: \"nazwa\", value: \"wartosc\" }];\r\n\r\n  uploadImage = e => {\r\n    var maxImageMB = 10;\r\n    let maxImageSize = 1024 * 1024 * maxImageMB;\r\n    var files = e.target.files;\r\n    console.log(files[0]);\r\n    if (files[0].size > maxImageSize) {\r\n      toast.error(\r\n        `Zdjęcie jest za duże, maksymalny rozmiar zdjęcia to ${maxImageMB} MB`\r\n      );\r\n      return;\r\n    }\r\n    var reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      this.setState(({ form }) => ({\r\n        form: { ...form, image: reader.result, cover: files[0] }\r\n      }));\r\n    };\r\n    reader.readAsDataURL(files[0]);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      shortDescription,\r\n      featured,\r\n      image,\r\n      description,\r\n      multichoiceCategories,\r\n      siepomagaLink,\r\n      checkboxKonto,\r\n      dateStart,\r\n      dateEnd,\r\n      publish,\r\n      dotpay,\r\n      paypall,\r\n      currentImage\r\n    } = this.state.form;\r\n\r\n    const { duringUpload } = this.state;\r\n    const { categories } = this.props;\r\n\r\n    const imageSource = () => {\r\n      if (currentImage && !image) {\r\n        return `${IMAGES_URL}/` + currentImage;\r\n      }\r\n      else {\r\n        return image;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Form onSubmit={this.formSubmitted} style={{ marginBottom: \"50px\" }}>\r\n        <Form.Field\r\n          control={Input}\r\n          name=\"title\"\r\n          label=\"Tytuł\"\r\n          placeholder=\"Tytuł\"\r\n          maxLength=\"300\"\r\n          value={title ? title : ''}\r\n          onChange={this.onChange}\r\n          required\r\n        />\r\n        <Form.Field\r\n          control={Input}\r\n          name=\"shortDescription\"\r\n          label=\"Krótki opis\"\r\n          placeholder=\"Krótki opis\"\r\n          maxLength=\"300\"\r\n          value={shortDescription}\r\n          onChange={this.onChange}\r\n        />\r\n        <Form.Field\r\n          label=\"Wybierz zdjęcie\"\r\n          control={Input}\r\n          placeholder=\"Zdjęcie...\"\r\n          name=\"pic\"\r\n          type=\"File\"\r\n          accept=\"image/*\"\r\n          onChange={this.uploadImage}\r\n        />\r\n        {(image || currentImage) && (\r\n          <Form.Field>\r\n            <Image\r\n              src={imageSource()}\r\n              size=\"small\"\r\n              alt=\"wybrane zdjecie\"\r\n              wrapped\r\n              name=\"image\"\r\n              value={image}\r\n              onChange={this.onChange}\r\n            />\r\n          </Form.Field>\r\n        )}\r\n        <Form.Field\r\n          control={TextArea}\r\n          label=\"Opis\"\r\n          maxLength={1500}\r\n          placeholder=\"Opis\"\r\n          name=\"description\"\r\n          value={description}\r\n          onChange={this.onChange}\r\n          required\r\n        />\r\n        <Form.Field\r\n          label=\"Wybierz kategorię\"\r\n          control={Dropdown}\r\n          placeholder=\"Kategorie\"\r\n          fluid\r\n          multiple\r\n          selection\r\n          options={categories}\r\n          name=\"multichoiceCategories\"\r\n          value={multichoiceCategories}\r\n          onChange={this.onChange}\r\n          required\r\n        />\r\n        <Form.Field\r\n          control={Input}\r\n          label=\"Link do siepomaga\"\r\n          placeholder=\"Link do siepomaga\"\r\n          name=\"siepomagaLink\"\r\n          value={siepomagaLink ? siepomagaLink : ''}\r\n          onChange={this.onChange}\r\n        />\r\n        <Form.Field\r\n          toggle\r\n          control={Checkbox}\r\n          label=\"Dotpay\"\r\n          name=\"dotpay\"\r\n          checked={dotpay}\r\n          onChange={this.toggleChackBox}\r\n        />{\" \"}\r\n        <Form.Field\r\n          toggle\r\n          control={Checkbox}\r\n          label=\"Paypall\"\r\n          name=\"paypall\"\r\n          checked={paypall}\r\n          onChange={this.toggleChackBox}\r\n        />\r\n        <Form.Group widths=\"equal\">\r\n          <SemanticDatepicker\r\n            label=\"Data początkowa\"\r\n            placeholder=\"Data początkowa\"\r\n            name=\"dateStart\"\r\n            selected={dateStart}\r\n            onDateChange={value => {\r\n              this.onChange(undefined, {\r\n                name: \"dateStart\",\r\n                value: value\r\n              });\r\n            }}\r\n            required\r\n          />\r\n          <SemanticDatepicker\r\n            label=\"Data końcowa\"\r\n            placeholder=\"Data końcowa\"\r\n            name=\"dateEnd\"\r\n            selected={dateEnd}\r\n            minDate={dateStart}\r\n            onDateChange={value => {\r\n              this.onChange(undefined, {\r\n                name: \"dateEnd\",\r\n                value\r\n              });\r\n            }}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Field\r\n          toggle\r\n          control={Checkbox}\r\n          label=\"Widoczne konto\"\r\n          name=\"checkboxKonto\"\r\n          checked={checkboxKonto}\r\n          onChange={this.toggleChackBox}\r\n        />\r\n        <Form.Field\r\n          toggle\r\n          control={Checkbox}\r\n          label=\"Widoczne publicznie\"\r\n          name=\"publish\"\r\n          checked={publish}\r\n          onChange={this.toggleChackBox}\r\n        />\r\n        <Form.Field\r\n          toggle\r\n          control={Checkbox}\r\n          name=\"featured\"\r\n          label=\"Wyróżniona zbiórka\"\r\n          checked={featured}\r\n          onChange={this.toggleChackBox}\r\n        />\r\n        <Button type=\"submit\" color=\"green\" size=\"big\" disabled={duringUpload}>\r\n          Wyślij{\" \"}\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostForm;\r\n","import { authTokenKey } from \"../Utils/auth\";\r\nimport { API_URL } from \"../config\";\r\nconst BASE_URL = API_URL + \"category\";\r\n\r\nexport function GetCategories() {\r\n  return fetch(`${BASE_URL}`).then(response => {\r\n    if (response.status !== 200) {\r\n      throw new Error(response.status);\r\n    }\r\n    return Promise.resolve(response.json());\r\n  });\r\n}\r\n\r\nexport function GetCategory(id) {\r\n  return fetch(`${BASE_URL}/details?id=${id}`).then(response => {\r\n    if (response.status !== 200) {\r\n      throw new Error(response.status);\r\n    }\r\n    return Promise.resolve(response.json());\r\n  });\r\n}\r\n\r\nexport function RemoveCategory(id) {\r\n  return fetch(`${BASE_URL}?id=${id}`, {\r\n    method: \"delete\"\r\n  }).then(response => {\r\n    if (response.status !== 200) {\r\n      throw new Error(response.status);\r\n    }\r\n    return Promise.resolve(response);\r\n  });\r\n}\r\n\r\nexport function AddCategory(category) {\r\n  var url = new URL(BASE_URL);\r\n\r\n  var formData = new FormData();\r\n\r\n  for (var name in category) {\r\n    formData.append(name, category[name]);\r\n  }\r\n\r\n  return fetch(url, {\r\n    method: \"post\",\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(authTokenKey)}`\r\n    },\r\n    body: formData\r\n  }).then(response => {\r\n    if (response.status !== 200) {\r\n      throw new Error(response.status);\r\n    }\r\n    return Promise.resolve(response);\r\n  });\r\n}\r\n\r\nexport function EditCategory(category) {\r\n  var url = new URL(BASE_URL);\r\n  var formData = new FormData();\r\n\r\n  for (var name in category) {\r\n    formData.append(name, category[name]);\r\n  }\r\n  return fetch(url, {\r\n    method: \"put\",\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(authTokenKey)}`\r\n    },\r\n    body: formData\r\n  }).then(response => {\r\n    if (response.status !== 200) {\r\n      throw new Error(response.status);\r\n    }\r\n    return Promise.resolve(response);\r\n  });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PostForm from \"./PostForm\";\r\nimport { Grid, Header, Dimmer, Loader } from \"semantic-ui-react\";\r\nimport\r\n{\r\n  creatAuction,\r\n  getDetails,\r\n  editAuction\r\n} from \"../../../service/auctionsService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { GetCategories } from \"../../../service/categoryService\";\r\nimport { mapInputsFromPost } from \"../../../Utils/helpers\";\r\nclass AddForm extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n\r\n    this.state = { auction: null, categories: [], loading: false };\r\n  }\r\n\r\n  onSumbit = form =>\r\n  {\r\n    this.setState({ loading: true });\r\n    if (!form.id) {\r\n      return creatAuction(form)\r\n        .then(response =>\r\n        {\r\n          if (response.status !== 200) {\r\n            throw new Error(response.status);\r\n          }\r\n          toast.success(\"Zbiórka została dodana\");\r\n          this.props.history.push(\"/admin\");\r\n        })\r\n        .catch(err =>\r\n        {\r\n          toast.error(\"Dodawanie nie powiodło się, spróbuj ponownie później\");\r\n          this.setState({ loading: false });\r\n        });\r\n    } else {\r\n      return editAuction(form)\r\n        .then(response =>\r\n        {\r\n          if (response.status !== 200) {\r\n            throw new Error(response.status);\r\n          }\r\n          toast.success(\"Zbiórka została zaktualizowana\");\r\n          this.props.history.push(\"/admin\");\r\n        })\r\n        .catch(err =>\r\n        {\r\n          toast.error(\r\n            \"Aktualizacja nie powiodła się, spróbuj ponownie później\"\r\n          );\r\n        });\r\n    }\r\n  };\r\n\r\n  async componentDidMount()\r\n  {\r\n    let { auctionId } = this.props;\r\n    if (auctionId) {\r\n      var details = await getDetails(auctionId);\r\n      this.setState({ auction: mapInputsFromPost(details) });\r\n    }\r\n\r\n    GetCategories().then(categories =>\r\n      this.setState({\r\n        loaded: true,\r\n        categories: categories.map(category => ({\r\n          key: category.id,\r\n          text: category.name,\r\n          value: category.id\r\n        }))\r\n      })\r\n    );\r\n  }\r\n\r\n  render()\r\n  {\r\n    if (\r\n      (this.props.auctionId && !this.state.auction) ||\r\n      this.state.categories.length === 0 ||\r\n      this.state.loading\r\n    ) {\r\n      return (\r\n        <Dimmer active>\r\n          <Loader>Loading</Loader>\r\n        </Dimmer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" margintop=\"10px\">\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as=\"h2\" color=\"black\" textAlign=\"center\">\r\n            {this.props.header}\r\n          </Header>\r\n          <PostForm\r\n            onSubmit={this.onSumbit}\r\n            auction={this.state.auction}\r\n            categories={this.state.categories}\r\n          />\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nexport default AddForm;\r\n","import React from \"react\";\r\nimport AddForm from \"./add/AddForm\";\r\n\r\nexport function Add({ history }) {\r\n  return <AddForm header={\"Dodaj nową zbiórkę\"} history={history} />;\r\n}\r\n","import { authTokenKey } from \"../Utils/auth\";\r\nimport { API_URL } from \"../config\";\r\nconst BASE_URL = API_URL + \"notification\";\r\n\r\nexport default {\r\n  sendNotification(auctionId, type) {\r\n    var url = new URL(BASE_URL);\r\n    return fetch(url, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${localStorage.getItem(authTokenKey)}`\r\n      },\r\n      body: JSON.stringify({ auctionId, type })\r\n    });\r\n  },\r\n  notificationsDetails(auctionId) {\r\n    var url = new URL(BASE_URL);\r\n    var params = { auctionId };\r\n    Object.keys(params).forEach(key =>\r\n      url.searchParams.append(key, params[key])\r\n    );\r\n\r\n    return fetch(url, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${localStorage.getItem(authTokenKey)}`\r\n      }\r\n    });\r\n  }\r\n};\r\n","import\r\n{\r\n  Button,\r\n  Grid,\r\n  Header,\r\n  Label,\r\n  Message,\r\n  Confirm,\r\n  Icon,\r\n} from 'semantic-ui-react';\r\nimport React, { Component } from 'react';\r\nimport notificationService from '../../service/notificationService';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass NotificationBox extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: true,\r\n      confirmOpen: false\r\n    };\r\n  }\r\n\r\n  render()\r\n  {\r\n    const { type, notificationDetails, submitConfirmed } = this.props;\r\n\r\n    return (\r\n      <Grid textAlign=\"center\">\r\n        <Grid.Column style={{ maxWidth: 500 }}>\r\n          <div style={{ 'cursor': 'pointer' }}>\r\n            <Header as=\"h4\" color=\"teal\" textAlign=\"center\" onClick={() => this.setState({ collapsed: !this.state.collapsed })}>\r\n              <p>Dodaj notyfikację {type} {this.state.collapsed}\r\n                <i className={\"angle icon \" + (this.state.collapsed ? 'down' : 'up')} />\r\n              </p>\r\n            </Header>\r\n          </div>\r\n          <div style={{ 'display': this.state.collapsed ? 'none' : 'block' }}>\r\n            <Message>\r\n              Prenumeratorzy notyfikacji {type}\r\n              <br />\r\n              <Label>\r\n                <Icon name=\"users\" />\r\n                {notificationDetails.subscribed != null ? notificationDetails.subscribed : 'obliczam...'}\r\n              </Label>\r\n            </Message>\r\n            <Message>\r\n              Liczba wysłanych notyfikacji {type} w tym miesiącu\r\n        <br />\r\n              <Label>\r\n                <Icon name=\"envelope open outline\" />\r\n                {notificationDetails.alreadySent != null && notificationDetails.monthlyLimit != null ?\r\n                  `${notificationDetails.alreadySent}/${notificationDetails.monthlyLimit}`\r\n                  : 'obliczam...'}\r\n              </Label>\r\n            </Message>\r\n            <Button\r\n              color=\"teal\"\r\n              fluid\r\n              size=\"large\"\r\n              onClick={() => this.onSubmit()}\r\n            >\r\n              Wyślij\r\n              </Button>\r\n          </div>\r\n        </Grid.Column>\r\n        <Confirm open={this.state.confirmOpen}\r\n          header={'Potwierdź'}\r\n          confirmButton={'Wyślij'}\r\n          cancelButton={'Anuluj'}\r\n          content={'Potwierdzasz wysłanie notyfikacji?'}\r\n          onCancel={() => this.setState({ confirmOpen: false })}\r\n          onConfirm={() =>\r\n          {\r\n            this.setState({ confirmOpen: false });\r\n            submitConfirmed();\r\n          }} />\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  onSubmit = () => this.setState({\r\n    confirmOpen: true\r\n  });\r\n}\r\n\r\nNotificationBox.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  submitConfirmed: PropTypes.func.isRequired,\r\n  notificationDetails: PropTypes.exact({\r\n    subscribed: PropTypes.number,\r\n    alreadySent: PropTypes.number,\r\n    monthlyLimit: PropTypes.number\r\n  })\r\n}\r\n\r\nexport default NotificationBox;\r\n\r\n","import React, { Component } from 'react';\r\nimport notificationService from '../../service/notificationService';\r\nimport PropTypes from 'prop-types';\r\nimport NotificationBox from './NotificationBox';\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default class Notifications extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            NotificationDetails: {\r\n                Sms: {\r\n                    alreadySent: null,\r\n                    monthlyLimit: null,\r\n                    subscribed: null\r\n                },\r\n                Push: {\r\n                    alreadySent: null,\r\n                    monthlyLimit: null,\r\n                    subscribed: null\r\n                },\r\n                Email: {\r\n                    alreadySent: null,\r\n                    monthlyLimit: null,\r\n                    subscribed: null\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount()\r\n    {\r\n        this.loadNotificationDetails();\r\n    }\r\n\r\n    loadNotificationDetails()\r\n    {\r\n        notificationService.notificationsDetails(this.props.auctionId)\r\n            .then(resp => resp.json())\r\n            .then(resp =>\r\n            {\r\n                this.setState({ NotificationDetails: resp });\r\n            });\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <React.Fragment>\r\n                <NotificationBox\r\n                    type={'SMS'}\r\n                    notificationDetails={this.state.NotificationDetails.Sms}\r\n                    submitConfirmed={() => { this.confirmed('sms') }} />\r\n                <NotificationBox\r\n                    type={'Email'}\r\n                    notificationDetails={this.state.NotificationDetails.Email}\r\n                    submitConfirmed={() => { this.confirmed('email') }} />\r\n                <NotificationBox\r\n                    type={'Push'}\r\n                    notificationDetails={this.state.NotificationDetails.Push}\r\n                    submitConfirmed={() => { this.confirmed('push') }} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    confirmed(notificationType)\r\n    {\r\n        notificationService.sendNotification(this.props.auctionId, notificationType)\r\n            .then(resp =>\r\n            {\r\n                if (resp.ok) {\r\n                    toast.success('Poprawnie dodano notyfikację');\r\n                }\r\n                else {\r\n                    toast.error('Dodanie notyfikacji nie powiodło się');\r\n                }\r\n                this.loadNotificationDetails();\r\n            });\r\n    }\r\n}\r\n\r\nNotifications.propTypes = {\r\n    auctionId: PropTypes.number.isRequired\r\n}","import React from \"react\";\r\nimport { Divider, Segment } from \"semantic-ui-react\";\r\nimport Notifications from \"../Notifications/Notifications\";\r\nimport AddForm from \"./add/AddForm\";\r\n\r\nexport function Edit({ match, history }) {\r\n  let auctionId = match.params.id;\r\n  return (\r\n    <Segment>\r\n      <AddForm\r\n        header={\"Edytuj danę zbiórki\"}\r\n        auctionId={auctionId}\r\n        history={history}\r\n      />\r\n      <Divider horizontal>Lub</Divider>\r\n      <Notifications auctionId={Number(match.params.id)} />\r\n    </Segment>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GetCategories, RemoveCategory } from \"../../service/categoryService\";\r\nimport { PlaceholderImg, IMAGES_URL } from \"../../config\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Table, Icon, Image, Dimmer, Loader, Confirm } from \"semantic-ui-react\";\r\n\r\nexport default class List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: [],\r\n      loading: true,\r\n      toBeDeleted: null,\r\n      deleteConfirmOpen: false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      this.getCategories();\r\n    } catch (err) {\r\n      this.setState({ loading: false });\r\n      console.log(err);\r\n      toast.error(\r\n        \"Nie udało się pobrać listy kategoii, spróbuj ponownie później\"\r\n      );\r\n    }\r\n  }\r\n\r\n  async getCategories() {\r\n    this.setState({ loading: true });\r\n    var allCategories = await GetCategories();\r\n    this.setState({ categories: allCategories, loading: false });\r\n  }\r\n\r\n  confirmRemove = id => {\r\n    this.setState({ toBeDeleted: id, deleteConfirmOpen: true });\r\n  };\r\n\r\n  removeCategory = async () => {\r\n    try {\r\n      this.setState({ loading: true, deleteConfirmOpen: false });\r\n      await RemoveCategory(this.state.toBeDeleted);\r\n      this.setState({ toBeDeleted: null });\r\n      this.getCategories();\r\n    } catch (err) {\r\n      this.setState({\r\n        loading: false,\r\n        toBeDeleted: null,\r\n        deleteConfirmOpen: false\r\n      });\r\n      console.log(err);\r\n      toast.error(\r\n        \"Nie udało się pobrać listy kategoii, spróbuj ponownie później\"\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return (\r\n        <Dimmer active>\r\n          <Loader>Loading</Loader>\r\n        </Dimmer>\r\n      );\r\n    }\r\n\r\n    var rows = this.state.categories.map(category => (\r\n      <Table.Row key={`category-${category.id}`}>\r\n        <Table.Cell>{category.name}</Table.Cell>\r\n        <Table.Cell>\r\n          <Image src={category.image ? `${IMAGES_URL}/${category.image}` : PlaceholderImg} size=\"small\" />\r\n        </Table.Cell>\r\n        <Table.Cell>\r\n          <Link to={`category/${category.id}`}>\r\n            <button className=\"ui gray button\">\r\n              <Icon name=\"edit\" />\r\n              Edytuj\r\n            </button>\r\n          </Link>\r\n          <button\r\n            className=\"ui red button\"\r\n            onClick={() => this.confirmRemove(category.id)}\r\n          >\r\n            <Icon name=\"trash\" />\r\n            Usuń\r\n          </button>\r\n        </Table.Cell>\r\n      </Table.Row>\r\n    ));\r\n    return (\r\n      <>\r\n        <Link to=\"categories/add\">\r\n          <button className=\"ui blue button\">\r\n            <Icon name=\"add\" />\r\n            dodaj\r\n          </button>\r\n        </Link>\r\n\r\n        <Table>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Nazwa</Table.HeaderCell>\r\n              <Table.HeaderCell>Zdjęcie</Table.HeaderCell>\r\n              <Table.HeaderCell>Akcje</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>{rows}</Table.Body>\r\n        </Table>\r\n        <Confirm\r\n          open={this.state.deleteConfirmOpen}\r\n          header=\"Potwierdzenie\"\r\n          cancelButton=\"Anuluj\"\r\n          confirmButton=\"Potwierdź\"\r\n          content=\"Czy potwierdzasz usunięcie kategorii?\"\r\n          onCancel={() => {\r\n            this.setState({ toBeDeleted: null, deleteConfirmOpen: false });\r\n          }}\r\n          onConfirm={async () => await this.removeCategory()}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport List from \"./List\";\r\nexport default class Categories extends Component {\r\n  render() {\r\n    return <List />;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form, Input, Image } from \"semantic-ui-react\";\r\nimport { PlaceholderImg, IMAGES_URL } from \"../../config\";\r\n\r\nexport default class CategoryForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (this.props.category) {\r\n      this.state = {\r\n        name: this.props.category.name,\r\n        image: this.props.category.image,\r\n        currentImage: this.props.category.currentImage\r\n      };\r\n    } else {\r\n      this.state = { name: \"\", image: \"\" };\r\n    }\r\n  }\r\n\r\n  uploadImage = e => {\r\n    var files = e.target.files;\r\n    var reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        image: reader.result,\r\n        cover: files[0]\r\n      });\r\n    };\r\n    reader.readAsDataURL(files[0]);\r\n  };\r\n\r\n  formSubmitted = e => {\r\n    e.preventDefault();\r\n    var category = {\r\n      id: this.state.id,\r\n      name: this.state.name,\r\n      cover: this.state.cover\r\n    };\r\n    this.props.onSubmit(category);\r\n  };\r\n\r\n  onChange = (e, { name, value }) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { image, name, currentImage } = this.state;\r\n\r\n    const imageSource = () => {\r\n      if (currentImage && !image) {\r\n        return `${IMAGES_URL}/` + currentImage;\r\n      }\r\n      else {\r\n        return image;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Form onSubmit={this.formSubmitted}>\r\n        <Form.Field\r\n          label=\"Nazwa kategorii:\"\r\n          value={name}\r\n          control={Input}\r\n          placeholder=\"Nazwa...\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          onChange={this.onChange}\r\n        />\r\n        <Form.Field\r\n          label=\"Wybierz zdjęcie\"\r\n          control={Input}\r\n          placeholder=\"Zdjęcie...\"\r\n          name=\"pic\"\r\n          type=\"File\"\r\n          accept=\"image/*\"\r\n          onChange={this.uploadImage}\r\n        />\r\n        {(image || currentImage) && (\r\n          <Form.Field>\r\n            <Image\r\n              src={imageSource() || PlaceholderImg}\r\n              size=\"medium\"\r\n              alt=\"wybrane zdjecie\"\r\n              wrapped\r\n              name=\"image\"\r\n              value={image}\r\n              onChange={this.onChange}\r\n            />\r\n          </Form.Field>\r\n        )}\r\n\r\n        <Button type=\"submit\" color=\"green\" size=\"big\">\r\n          Wyślij{\" \"}\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { GetCategory, EditCategory } from \"../../service/categoryService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\nimport CategoryForm from \"./CategoryForm\";\r\n\r\nexport default class EditDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { category: null, loading: true };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      var categoryId = this.props.match.params.id;\r\n      var categoryDetails = await GetCategory(categoryId);\r\n      this.setState({\r\n        category: categoryDetails,\r\n        loading: false\r\n      });\r\n    } catch (err) {\r\n      this.setState({ loading: false });\r\n      console.log(err);\r\n      toast.error(\r\n        \"Nie udało się pobrać listy kategoii, spróbuj ponownie później\"\r\n      );\r\n    }\r\n  }\r\n\r\n  onSubmit = async category => {\r\n    try {\r\n      this.setState({ loading: true });\r\n      category.id = this.state.category.id;\r\n      await EditCategory(category);\r\n      this.setState({ loading: false });\r\n      toast.success(\"Aktualizacja zakończona pomyślnie\");\r\n      this.props.history.push(\"/admin/categories\");\r\n    } catch (err) {\r\n      this.setState({ loading: false });\r\n      toast.error(\r\n        \"Nie udało się zaktualizować kategorii, spróbuj ponownie później\"\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return (\r\n        <Dimmer active>\r\n          <Loader>Loading</Loader>\r\n        </Dimmer>\r\n      );\r\n    }\r\n    return (\r\n      <CategoryForm onSubmit={this.onSubmit} category={this.state.category} />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport CategoryForm from \"./CategoryForm\";\r\nimport { AddCategory as ServiceAddCategory } from \"../../service/categoryService\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default class AddCategory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { loading: false };\r\n  }\r\n\r\n  onSubmit = async category => {\r\n    try {\r\n      this.setState({ loading: true });\r\n      await ServiceAddCategory(category);\r\n      this.setState({ loading: false });\r\n      toast.success(\"Kategoria została dodana\");\r\n      this.props.history.push(\"/admin/categories\");\r\n    } catch (err) {\r\n      this.setState({ loading: false });\r\n      toast.error(\"Nie udało się dodać kategorii, spróbuj ponownie później\");\r\n    }\r\n  };\r\n  render() {\r\n    if (this.state.loading) {\r\n      return (\r\n        <Dimmer active>\r\n          <Loader>Loading</Loader>\r\n        </Dimmer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <CategoryForm onSubmit={this.onSubmit} category={this.state.category} />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { authTokenKey } from '../Utils/auth';\r\nexport function Header() {\r\n    function logout() {\r\n        localStorage.removeItem(authTokenKey);\r\n        window.location.href = '/login';\r\n    }\r\n\r\n    return (\r\n        <div className=\"ui menu menu-container\">\r\n            <div className=\"left\">\r\n                <div className=\"header item\">\r\n                    Ratujmy zwierzaki\r\n            </div>\r\n                <a className=\"item\" href=\"/admin/list\">\r\n                    Zbiórki\r\n                </a>\r\n                <a className=\"item\" href=\"/admin/categories\">\r\n                    Kategorie\r\n                </a>\r\n            </div>\r\n            <div className=\"right\">\r\n                <Button primary onClick={() => logout()}>Wyloguj</Button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { List } from \"./Auctions/List\";\r\nimport { Add } from \"./Auctions/Add\";\r\nimport { Edit } from \"./Auctions/Edit\";\r\nimport Categories from \"./Categories\";\r\nimport EditDetails from \"./Categories/EditDetails\";\r\nimport AddCategory from \"./Categories/Add\";\r\nimport { Header } from \"./Header\";\r\n\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nexport function Admin() {\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      <Router>\r\n        <Route exact path=\"/admin\" component={List} />\r\n        <Route path=\"/admin/list\" component={List} />\r\n        <Route path=\"/admin/add\" component={Add} />\r\n        <Route path=\"/admin/edit/:id\" component={Edit} />\r\n        <Route path=\"/admin/categories\" exact component={Categories} />\r\n        <Route path=\"/admin/category/:id\" exact component={EditDetails} />\r\n        <Route path=\"/admin/categories/add\" exact component={AddCategory} />\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n","import { API_URL } from \"../config\";\r\nconst BASE_URL = API_URL + \"user/validate\";\r\n\r\nexport default {\r\n  sendLogUser(login, password) {\r\n    return fetch(BASE_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ login, password })\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Button, Form, Grid, Message, Header, Segment } from 'semantic-ui-react'\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\nimport loginService from '../service/loginService';\r\nimport { authTokenKey, isAuthenticated } from '../Utils/auth';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            logine: '',\r\n            password: '',\r\n            invalid_credentials: false\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        loginService.sendLogUser(this.state.login, this.state.password)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                if (response.token) {\r\n                    localStorage.setItem(authTokenKey, response.token);\r\n                    this.props.history.push('/admin/list');\r\n                }\r\n                else {\r\n                    this.setState({ invalid_credentials: true });\r\n                    toast.error(\"Błędne dane logowania\");\r\n                }\r\n            })\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        if (isAuthenticated()) {\r\n            this.props.history.push('/admin/list');\r\n            return null;\r\n        }\r\n        return (\r\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <Header as='h2' color='black' textAlign='center'>\r\n                        Zaloguj się jako administrator:\r\n                    </Header>\r\n                    <Form size='large'>\r\n                        <Segment stacked>\r\n                            <Form.Input\r\n                                fluid icon=\"user\"\r\n                                iconPosition='left'\r\n                                placeholder='Wprowadź login'\r\n                                type='text'\r\n                                value={this.state.login}\r\n                                onChange={(e) => { this.setState({ login: e.target.value }) }}\r\n                            />\r\n                            <Form.Input\r\n                                fluid icon=\"lock\"\r\n                                iconPosition='left'\r\n                                placeholder='Wprowadź hasło'\r\n                                type='password'\r\n                                value={this.state.password}\r\n                                onChange={(e) => { this.setState({ password: e.target.value }) }}\r\n                            />\r\n                            <Button onClick={this.handleSubmit} color='black' fluid size='large'>\r\n                                Zaloguj\r\n                             </Button>\r\n                        </Segment>\r\n                    </Form>\r\n                    <Message>\r\n                        Nie jesteś administratorem? <Link to={`/`}>Wróć na stronę główną</Link>\r\n                    </Message>\r\n                </Grid.Column>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nexport default Login;","import React from 'react';\r\nimport {isAuthenticated} from '../Utils/auth';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport function ProtectedRoutes({ component: Component, ...rest })\r\n{\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                isAuthenticated() ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: props.location }\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Admin } from \"./Admin\";\r\nimport Login from \"./Login\";\r\nimport { ProtectedRoutes } from \"./ProtectedRoutes\";\r\nimport \"../Styles/App.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <ToastContainer />\r\n      <div>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/\" exact component={Login} />\r\n        <ProtectedRoutes path=\"/admin\" component={Admin} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}