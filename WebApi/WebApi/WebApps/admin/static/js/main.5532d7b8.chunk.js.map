{"version":3,"sources":["Utils/auth.js","Utils/helpers.js","service/auctionsService.js","Components/Auctions/List.js","service/categoryService.js","Components/Auctions/add/PostForm.js","Components/Auctions/add/AddForm.js","Components/Auctions/Add.js","service/notificationService.js","Components/Notifications/NotificationBox.js","Components/Notifications/Notifications.js","Components/Auctions/Edit.js","Components/Admin.js","service/loginService.js","Components/Login.js","Components/ProtectedRoutes.js","Components/Header.js","Components/App.js","serviceWorker.js","index.js"],"names":["authTokenKey","isAuthenticated","token","localStorage","getItem","decodedToken","jwt","decode","expiry","exp","Date","getTime","mapInputsForPost","_ref","multichoiceCategories","checkboxKonto","adressStart","adressEnd","phone","dateStart","dateEnd","remaining","Object","objectWithoutProperties","objectSpread","categories","account","addressFrom","addressTo","contactNumber","dateFrom","dateTo","BASE_URL","List","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showPage","page","pages","length","setState","loadAuctions","nextPage","state","previousPage","deleteClicked","id","toBeDeleted","deleteConfirmOpen","values","totalCount","pageSize","isLoading","inherits","createClass","key","value","_this2","react_default","a","createElement","Fragment","className","map","title","description","toLocaleDateString","onClick","props","history","push","concat","bind","colSpan","Confirm","open","header","cancelButton","confirmButton","content","onCancel","onConfirm","deleteConfirm","_this3","url","URL","params","keys","forEach","searchParams","append","fetch","method","headers","Content-Type","Authorization","getAuctions","then","response","json","pagesCount","i","_this4","deleteAuction","ok","toast","success","error","React","Component","PostForm","form","image","dotpayLink","paypalLink","siepomagaLink","getCurrentDate","files","loaded","duringUpload","uploadStatus","onChange","e","name","_ref2","defineProperty","formSubmitted","preventDefault","_this$state","onSubmit","catch","options","text","uploadImage","target","reader","FileReader","onloadend","_ref3","result","readAsDataURL","_this$props","isUpdate","category","toISOString","slice","_this$state$form","console","log","_this$state2","Form","style","marginBottom","Field","control","Input","label","placeholder","required","type","accept","Image","src","size","alt","wrapped","TextArea","Dropdown","fluid","multiple","selection","loading","Checkbox","checked","Group","widths","Button","color","disabled","AddForm","onSumbit","body","JSON","stringify","creatAuction","status","Error","err","Grid","textAlign","height","verticalAlign","margintop","Column","maxWidth","Header","as","add_PostForm","Add","add_AddForm","notificationService","auctionId","NotificationBox","confirmOpen","collapsed","notificationDetails","submitConfirmed","cursor","display","Message","Label","Icon","subscribed","alreadySent","monthlyLimit","Notifications","NotificationDetails","Sms","Push","Email","loadNotificationDetails","resp","Notifications_NotificationBox","confirmed","notificationType","Edit","match","Segment","Divider","horizontal","Notifications_Notifications","Number","Admin","react_router_dom","react_router","exact","path","component","loginService","login","password","Login","logine","invalid_credentials","handleSubmit","assertThisInitialized","event","setItem","stacked","icon","iconPosition","to","ProtectedRoutes","rest","assign","render","pathname","from","location","href","primary","removeItem","window","App","react_toastify","Header_Header","Boolean","hostname","ReactDOM","Components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5532d7b8.chunk.js","sourcesContent":["import jwt from 'jsonwebtoken';\r\nexport const authTokenKey = 'AUTH_KEY';\r\n\r\nexport function isAuthenticated() {\r\n    let token = localStorage.getItem(authTokenKey);\r\n    if (!token)\r\n        return false;\r\n\r\n    let decodedToken = jwt.decode(token);\r\n    if (decodedToken) {\r\n        const expiry = decodedToken.exp;\r\n        const now = new Date();\r\n        return now.getTime() < expiry * 1000;\r\n    }\r\n\r\n    return false;\r\n}","export const mapInputsForPost = ({\r\n    multichoiceCategories,\r\n    checkboxKonto,\r\n    adressStart,\r\n    adressEnd,\r\n    phone,\r\n    dateStart,\r\n    dateEnd,\r\n    ...remaining\r\n  }) => {\r\n    return {\r\n      categories: multichoiceCategories,\r\n      account: checkboxKonto,\r\n      addressFrom: adressStart,\r\n      addressTo: adressEnd,\r\n      contactNumber: phone,\r\n      dateFrom: dateStart,\r\n      dateTo: dateEnd,\r\n      ...remaining,\r\n    };\r\n  };","import { authTokenKey } from '../Utils/auth';\r\nimport {mapInputsForPost} from '../Utils/helpers'\r\nconst BASE_URL = 'https://localhost:44335/api/auction'\r\n\r\nexport function getAuctions(page,pageSize) {\r\n    var url = new URL(\"https://localhost:44335/api/auction\");\r\n    var params = {page,pageSize};\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n    \r\n    return fetch(url, {\r\n        method: 'get',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${localStorage.getItem(authTokenKey)}`\r\n        }\r\n    })\r\n}\r\n\r\nexport function deleteAuction(id)\r\n{\r\n    var url = new URL(\"https://localhost:44335/api/auction\");\r\n    url.searchParams.append('id',id);\r\n    return fetch(url, {\r\n        method: 'delete',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${localStorage.getItem(authTokenKey)}`\r\n        }\r\n    })\r\n}\r\n\r\nexport function creatAuction(form){\r\n    var url = new URL(BASE_URL);\r\n    return fetch(url, {\r\n        method: 'post',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${localStorage.getItem(authTokenKey)}`\r\n        },\r\n        body: JSON.stringify(mapInputsForPost(form))\r\n    })\r\n}","import React from 'react';\r\nimport { getAuctions, deleteAuction } from '../../service/auctionsService';\r\nimport { Confirm } from 'semantic-ui-react';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport class List extends React.Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            values: [],\r\n            totalCount: 0,\r\n            page: 1,\r\n            pageSize: 5,\r\n            isLoading: false,\r\n            deleteConfirmOpen: false,\r\n            toBeDeleted: null\r\n        };\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <React.Fragment>\r\n                <table className=\"ui celled padded table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"three wide\">Tytuł</th>\r\n                            <th className=\"six wide\">Opis</th>\r\n                            <th className=\"two wide\">Ważna od</th>\r\n                            <th className=\"two wide\">Ważna do</th>\r\n                            <th className=\"three wide\"></th>\r\n                        </tr></thead>\r\n                    <tbody>\r\n                        {this.state.values.map(a =>\r\n                        {\r\n                            return <tr key={a.id}>\r\n                                <td>\r\n                                    {a.title}\r\n                                </td>\r\n                                <td>\r\n                                    {a.description}\r\n                                </td>\r\n                                <td>\r\n                                    {new Date(a.dateFrom).toLocaleDateString()}\r\n                                </td>\r\n                                <td>\r\n                                    {new Date(a.dateTo).toLocaleDateString()}\r\n                                </td>\r\n                                <td>\r\n                                    <button className=\"ui gray button\"\r\n                                        onClick={() => { this.props.history.push(`/admin/edit/${a.id}`) }}>\r\n                                        Edytuj\r\n                                    </button>\r\n                                    <button className=\"ui red button\"\r\n                                        onClick={this.deleteClicked.bind(this, a.id)}>\r\n                                        Usuń\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        })}\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <th colSpan=\"5\">\r\n                                <button className=\"ui blue button\"\r\n                                    onClick={() => { this.props.history.push(`/admin/add`) }}>\r\n                                    Dodaj\r\n                                    </button>\r\n                                <div className=\"ui right floated pagination menu\">\r\n                                    <a className=\"icon item\" onClick={this.previousPage}>\r\n                                        <i className=\"left chevron icon\"></i>\r\n                                    </a>\r\n                                    {this.pages()}\r\n                                    <a className=\"icon item\" onClick={this.nextPage}>\r\n                                        <i className=\"right chevron icon\"></i>\r\n                                    </a>\r\n                                </div>\r\n                                <div className=\"ui label total\">\r\n                                    Całkowita ilość: {this.state.totalCount}\r\n                                </div>\r\n                            </th>\r\n                        </tr></tfoot>\r\n                </table>\r\n                <Confirm open={this.state.deleteConfirmOpen}\r\n                    header='Potwierdzenie'\r\n                    cancelButton='Anuluj'\r\n                    confirmButton='Potwierdź'\r\n                    content='Czy potwierdzasz usunięcie aukcji?'\r\n                    onCancel={() => { this.setState({ toBeDeleted: null, deleteConfirmOpen: false }) }}\r\n                    onConfirm={this.deleteConfirm.bind(this)} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.loadAuctions();\r\n    }\r\n\r\n    loadAuctions()\r\n    {\r\n        this.setState({ isLoading: true });\r\n        getAuctions(this.state.page, this.state.pageSize)\r\n            .then(response => response.json())\r\n            .then(response => { this.setState({ isLoading: false, ...response }) });\r\n    }\r\n\r\n    pages()\r\n    {\r\n        var pages = [];\r\n        var pagesCount = this.state.totalCount / this.state.pageSize + 1;\r\n        for (var i = 1; i < pagesCount; i++) {\r\n            pages.push\r\n                (\r\n                    <a\r\n                        key={i}\r\n                        onClick={this.showPage.bind(this, i)}\r\n                        className={this.state.page == i ? 'active item' : 'item'}>\r\n                        {i}\r\n                    </a>\r\n                );\r\n        }\r\n        return pages;\r\n    }\r\n\r\n    showPage = (page) =>\r\n    {\r\n        if (page > 0 && page <= this.pages().length)\r\n            this.setState({ page: page }, this.loadAuctions);\r\n    }\r\n\r\n    nextPage = () => this.showPage(this.state.page + 1);\r\n    previousPage = () => this.showPage(this.state.page - 1);\r\n\r\n    deleteClicked=(id)=>this.setState(\r\n            {\r\n                toBeDeleted: id,\r\n                deleteConfirmOpen: true\r\n            });\r\n\r\n    deleteConfirm()\r\n    {\r\n        this.setState({ toBeDeleted: null, deleteConfirmOpen: false });\r\n        deleteAuction(this.state.toBeDeleted)\r\n            .then(response =>\r\n            {\r\n                if (response.ok)\r\n                    toast.success(\"Usunięcie powiodło się\");\r\n                else\r\n                    toast.error(\"Usunięcie nie powiodło się\");\r\n\r\n                this.loadAuctions();\r\n            })\r\n    }\r\n}","const BASE_URL = \"https://localhost:44335/api/category\";\r\n\r\nexport function GetCategories() {\r\n  return fetch(BASE_URL).then(response => response.json());\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  TextArea,\r\n  Input,\r\n  Checkbox,\r\n  Button,\r\n  Image,\r\n  Form,\r\n  Dropdown\r\n} from \"semantic-ui-react\";\r\nimport { GetCategories } from \"../../../service/categoryService\";\r\n\r\nclass PostForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { form, isUpdate } = this.props;\r\n    if (isUpdate) this.state = { form: { ...form } };\r\n\r\n    this.state.loaded = false;\r\n  }\r\n  state = {\r\n    form: {\r\n      title: \"\",\r\n      image: null,\r\n      description: \"\",\r\n      multichoiceCategories: [],\r\n      dotpayLink: \"\",\r\n      paypalLink: \"\",\r\n      siepomagaLink: \"\",\r\n      checkboxKonto: true,\r\n      dateStart: this.getCurrentDate(),\r\n      dateEnd: \"\",\r\n      adressStart: \"\",\r\n      adressEnd: \"\",\r\n      phone: \"\",\r\n      files: null\r\n    },\r\n    loaded: false,\r\n    categories: [],\r\n    duringUpload: false,\r\n    uploadStatus: false\r\n  };\r\n  componentDidMount() {\r\n    GetCategories().then(categories =>\r\n      this.setState({\r\n        loaded: true,\r\n        categories: categories.map(category => ({\r\n          key: category.id,\r\n          text: category.name,\r\n          value: category.id\r\n        }))\r\n      })\r\n    );\r\n  }\r\n\r\n  getCurrentDate() {\r\n    var date = new Date();\r\n    var currentDate = date.toISOString().slice(0, 10);\r\n    return currentDate;\r\n  }\r\n\r\n  onChange = (e, { name, value }) => {\r\n    this.setState(({ form }) => ({ form: { ...form, [name]: value } }));\r\n  };\r\n  formSubmitted = e => {\r\n    e.preventDefault();\r\n\r\n    const { loaded, form } = this.state;\r\n\r\n    if (loaded)\r\n      this.props\r\n        .onSubmit(form)\r\n        .then(() => this.setState({ duringUpload: false, uploadStatus: true }))\r\n        .catch(() =>\r\n          this.setState({ duringUpload: false, uploadStatus: false })\r\n        );\r\n  };\r\n  options = [{ key: \"klucz\", text: \"nazwa\", value: \"wartosc\" }];\r\n\r\n  uploadImage = e => {\r\n    var files = e.target.files;\r\n    var reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      this.setState(({ form }) => ({\r\n        form: { ...form, image: reader.result }\r\n      }));\r\n    };\r\n    reader.readAsDataURL(files[0]);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      image,\r\n      description,\r\n      multichoiceCategories,\r\n      dotpayLink,\r\n      paypalLink,\r\n      siepomagaLink,\r\n      checkboxKonto,\r\n      dateStart,\r\n      dateEnd,\r\n      adressStart,\r\n      adressEnd,\r\n      phone\r\n    } = this.state.form;\r\n\r\n    console.log(image);\r\n    const { loaded, categories, duringUpload } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.formSubmitted} style={{ marginBottom: \"50px\" }}>\r\n        <Form.Field\r\n          control={Input}\r\n          name=\"title\"\r\n          label=\"Tytuł\"\r\n          placeholder=\"Tytuł\"\r\n          value={title}\r\n          onChange={this.onChange}\r\n          required\r\n        />\r\n        <Form.Field\r\n          label=\"Wybierz zdjęcie\"\r\n          control={Input}\r\n          placeholder=\"Zdjęcie...\"\r\n          name=\"pic\"\r\n          type=\"File\"\r\n          accept=\"image/*\"\r\n          onChange={this.uploadImage}\r\n        />\r\n        {image && (\r\n          <Form.Field>\r\n            <Image\r\n              src={image}\r\n              size=\"small\"\r\n              alt=\"wybrane zdjecie\"\r\n              wrapped\r\n              name=\"image\"\r\n              value={image}\r\n              onChange={this.onChange}\r\n            />\r\n          </Form.Field>\r\n        )}\r\n        <Form.Field\r\n          control={TextArea}\r\n          label=\"Opis\"\r\n          placeholder=\"Opis\"\r\n          name=\"description\"\r\n          value={description}\r\n          onChange={this.onChange}\r\n          required\r\n        />\r\n        <Form.Field\r\n          label=\"Wybierz kategorię\"\r\n          control={Dropdown}\r\n          placeholder=\"Kategorie\"\r\n          fluid\r\n          multiple\r\n          selection\r\n          options={categories}\r\n          name=\"multichoiceCategories\"\r\n          value={multichoiceCategories}\r\n          onChange={this.onChange}\r\n          loading={!loaded}\r\n          required\r\n        />\r\n        <Form.Field\r\n          control={Input}\r\n          label=\"Dotpay\"\r\n          placeholder=\"Link do dotpay\"\r\n          name=\"dotpayLink\"\r\n          value={dotpayLink}\r\n          onChange={this.onChange}\r\n        />\r\n        <Form.Field\r\n          control={Input}\r\n          label=\"Paypal\"\r\n          placeholder=\"Link do paypal\"\r\n          name=\"paypalLink\"\r\n          value={paypalLink}\r\n          onChange={this.onChange}\r\n        />\r\n        <Form.Field\r\n          control={Input}\r\n          label=\"siepomaga\"\r\n          placeholder=\"Link do siepomaga\"\r\n          name=\"siepomagaLink\"\r\n          value={siepomagaLink}\r\n          onChange={this.onChange}\r\n        />\r\n        <Form.Field\r\n          control={Checkbox}\r\n          label=\"Konto\"\r\n          name=\"checkboxKonto\"\r\n          checked={checkboxKonto}\r\n          onChange={this.onChange}\r\n        />\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field\r\n            control={Input}\r\n            label=\"Data początkowa\"\r\n            placeholder=\"Data początkowa\"\r\n            name=\"dateStart\"\r\n            value={dateStart}\r\n            type=\"date\"\r\n            onChange={this.onChange}\r\n          />\r\n          <Form.Field\r\n            control={Input}\r\n            label=\"Data końcowa\"\r\n            placeholder=\"Data końcowa\"\r\n            name=\"dateEnd\"\r\n            value={dateEnd}\r\n            type=\"date\"\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n        {/* <Form.Group widths=\"equal\">\r\n          <Form.Field\r\n            control={Input}\r\n            label=\"Adres początkowy\"\r\n            placeholder=\"Adres początkowy\"\r\n            name=\"adressStart\"\r\n            value={adressStart}\r\n            onChange={this.onChange}\r\n          />\r\n          <Form.Field\r\n            control={Input}\r\n            label=\"Adres końcowy\"\r\n            placeholder=\"Adres końcowy\"\r\n            name=\"adressEnd\"\r\n            value={adressEnd}\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group> */}\r\n        <Form.Field\r\n          control={Input}\r\n          label=\"Telefon\"\r\n          placeholder=\"Wprowadź numer telefonu\"\r\n          name=\"phone\"\r\n          value={phone}\r\n          onChange={this.onChange}\r\n        />\r\n        <Button type=\"submit\" color=\"green\" size=\"big\" disabled={duringUpload}>\r\n          Wyślij{\" \"}\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostForm;\r\n","import React, { Component } from \"react\";\r\nimport PostForm from \"./PostForm\";\r\nimport { Grid, Header } from \"semantic-ui-react\";\r\nimport { creatAuction } from \"../../../service/auctionsService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass AddForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onSumbit = form => {\r\n    console.log(form);\r\n    return creatAuction(form)\r\n      .then(response => {\r\n        if (response.status !== 200) {\r\n          throw new Error(response.status);\r\n        }\r\n        toast.success(\"Zbiórka została dodana\");\r\n      })\r\n      .catch(err => {\r\n        toast.error(\"Dodawanie nie powiodło się, spróbuj ponownie później\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100vh\" }}\r\n        verticalAlign=\"middle\"\r\n        margintop=\"10px\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as=\"h2\" color=\"black\" textAlign=\"center\">\r\n            {this.props.header}\r\n          </Header>\r\n          <PostForm onSubmit={this.onSumbit} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nexport default AddForm;\r\n","import React from 'react';\r\nimport AddForm from './add/AddForm'\r\n\r\nexport function Add()\r\n{\r\n    return (\r\n        <AddForm header={'Dodaj nową zbiórkę'} />\r\n    )\r\n}","import { authTokenKey } from '../Utils/auth';\r\n\r\nexport default {\r\n  sendNotification(auctionId, type)\r\n  {\r\n    var url = new URL(\"https://localhost:44335/api/notification\");\r\n    return fetch(url, {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem(authTokenKey)}`\r\n      },\r\n      body: JSON.stringify({ auctionId, type })\r\n    })\r\n  },\r\n  notificationsDetails(auctionId)\r\n  {\r\n    var url = new URL(\"https://localhost:44335/api/notification\");\r\n    var params = { auctionId };\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n\r\n    return fetch(url, {\r\n      method: 'get',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem(authTokenKey)}`\r\n      }\r\n    })\r\n  }\r\n};\r\n","import\r\n{\r\n  Button,\r\n  Grid,\r\n  Header,\r\n  Label,\r\n  Message,\r\n  Confirm,\r\n  Icon,\r\n} from 'semantic-ui-react';\r\nimport React, { Component } from 'react';\r\nimport notificationService from '../../service/notificationService';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass NotificationBox extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: true,\r\n      confirmOpen: false\r\n    };\r\n  }\r\n\r\n  render()\r\n  {\r\n    const { type, notificationDetails, submitConfirmed } = this.props;\r\n\r\n    return (\r\n      <Grid textAlign=\"center\">\r\n        <Grid.Column style={{ maxWidth: 500 }}>\r\n          <div style={{ 'cursor': 'pointer' }}>\r\n            <Header as=\"h4\" color=\"teal\" textAlign=\"center\" onClick={() => this.setState({ collapsed: !this.state.collapsed })}>\r\n              <p>Dodaj notyfikację {type} {this.state.collapsed}\r\n                <i className={\"angle icon \" + (this.state.collapsed ? 'down' : 'up')} />\r\n              </p>\r\n            </Header>\r\n          </div>\r\n          <div style={{ 'display': this.state.collapsed ? 'none' : 'block' }}>\r\n            <Message>\r\n              Prenumeratorzy notyfikacji {type}\r\n              <br />\r\n              <Label>\r\n                <Icon name=\"users\" />\r\n                {notificationDetails.subscribed != null ? notificationDetails.subscribed : 'obliczam...'}\r\n              </Label>\r\n            </Message>\r\n            <Message>\r\n              Liczba wysłanych notyfikacji {type} w tym miesiącu\r\n        <br />\r\n              <Label>\r\n                <Icon name=\"envelope open outline\" />\r\n                {notificationDetails.alreadySent != null && notificationDetails.monthlyLimit != null ?\r\n                  `${notificationDetails.alreadySent}/${notificationDetails.monthlyLimit}`\r\n                  : 'obliczam...'}\r\n              </Label>\r\n            </Message>\r\n            <Button\r\n              color=\"teal\"\r\n              fluid\r\n              size=\"large\"\r\n              onClick={() => this.onSubmit()}\r\n            >\r\n              Wyślij\r\n              </Button>\r\n          </div>\r\n        </Grid.Column>\r\n        <Confirm open={this.state.confirmOpen}\r\n          header={'Potwierdź'}\r\n          confirmButton={'Wyślij'}\r\n          cancelButton={'Anuluj'}\r\n          content={'Potwierdzasz wysłanie notyfikacji?'}\r\n          onCancel={() => this.setState({ confirmOpen: false })}\r\n          onConfirm={() =>\r\n          {\r\n            this.setState({ confirmOpen: false });\r\n            submitConfirmed();\r\n          }} />\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  onSubmit = () => this.setState({\r\n    confirmOpen: true\r\n  });\r\n}\r\n\r\nNotificationBox.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  submitConfirmed: PropTypes.func.isRequired,\r\n  notificationDetails: PropTypes.exact({\r\n    subscribed: PropTypes.number,\r\n    alreadySent: PropTypes.number,\r\n    monthlyLimit: PropTypes.number\r\n  })\r\n}\r\n\r\nexport default NotificationBox;\r\n\r\n","import React, { Component } from 'react';\r\nimport notificationService from '../../service/notificationService';\r\nimport PropTypes from 'prop-types';\r\nimport NotificationBox from './NotificationBox';\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default class Notifications extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            NotificationDetails: {\r\n                Sms: {\r\n                    alreadySent: null,\r\n                    monthlyLimit: null,\r\n                    subscribed: null\r\n                },\r\n                Push: {\r\n                    alreadySent: null,\r\n                    monthlyLimit: null,\r\n                    subscribed: null\r\n                },\r\n                Email: {\r\n                    alreadySent: null,\r\n                    monthlyLimit: null,\r\n                    subscribed: null\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount()\r\n    {\r\n        this.loadNotificationDetails();\r\n    }\r\n\r\n    loadNotificationDetails()\r\n    {\r\n        notificationService.notificationsDetails(this.props.auctionId)\r\n            .then(resp => resp.json())\r\n            .then(resp =>\r\n            {\r\n                this.setState({ NotificationDetails: resp });\r\n            });\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <React.Fragment>\r\n                <NotificationBox\r\n                    type={'SMS'}\r\n                    notificationDetails={this.state.NotificationDetails.Sms}\r\n                    submitConfirmed={() => { this.confirmed('sms') }} />\r\n                <NotificationBox\r\n                    type={'Email'}\r\n                    notificationDetails={this.state.NotificationDetails.Email}\r\n                    submitConfirmed={() => { this.confirmed('email') }} />\r\n                <NotificationBox\r\n                    type={'Push'}\r\n                    notificationDetails={this.state.NotificationDetails.Push}\r\n                    submitConfirmed={() => { this.confirmed('push') }} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    confirmed(notificationType)\r\n    {\r\n        notificationService.sendNotification(this.props.auctionId, notificationType)\r\n            .then(resp =>\r\n            {\r\n                if (resp.ok) {\r\n                    toast.success('Poprawnie dodano notyfikację');\r\n                }\r\n                else {\r\n                    toast.error('Dodanie notyfikacji nie powiodło się');\r\n                }\r\n                this.loadNotificationDetails();\r\n            });\r\n    }\r\n}\r\n\r\nNotifications.propTypes = {\r\n    auctionId: PropTypes.number.isRequired\r\n}","import React from 'react';\r\nimport { Divider, Segment, Header } from 'semantic-ui-react'\r\nimport Notifications from '../Notifications/Notifications';\r\n\r\nexport function Edit({ match }) {\r\n    return (\r\n        <Segment>\r\n            {/* <AddForm header={'Edytuj danę zbiórki'} /> */}\r\n            <br/><br/><br/><br/><br/><br/><br/>\r\n            <Divider horizontal>Lub</Divider>\r\n            <Notifications auctionId={Number(match.params.id)}/>\r\n        </Segment>\r\n    )\r\n}","import React from 'react';\r\nimport { List } from './Auctions/List';\r\nimport { Add} from './Auctions/Add';\r\nimport { Edit } from './Auctions/Edit';\r\n\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nexport function Admin()\r\n{\r\n    return (\r\n        <Router>\r\n            <Route exact path=\"/admin\" component={List} />\r\n            <Route path=\"/admin/list\" component={List} />\r\n            <Route path=\"/admin/add\" component={Add} />\r\n            <Route path=\"/admin/edit/:id\" component= {Edit}/>\r\n        </Router>\r\n    )\r\n}","export default {\r\n    sendLogUser(login, password)\r\n    {\r\n        return fetch('https://localhost:44335/api/user/validate', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({login,password})\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport { Button, Form, Grid, Message, Header, Segment } from 'semantic-ui-react'\r\nimport\r\n{\r\n    Link\r\n} from 'react-router-dom';\r\nimport loginService from '../service/loginService';\r\nimport { authTokenKey, isAuthenticated } from '../Utils/auth';\r\n\r\n\r\nclass Login extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            logine: '',\r\n            password: '',\r\n            invalid_credentials: false\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event)\r\n    {\r\n        loginService.sendLogUser(this.state.login, this.state.password)\r\n            .then(response => response.json())\r\n            .then(response =>\r\n            {\r\n                if (response.token) {\r\n                    localStorage.setItem(authTokenKey, response.token);\r\n                    this.props.history.push('/admin/list');\r\n                }\r\n                else {\r\n                    this.setState({ invalid_credentials: true });\r\n                }\r\n            })\r\n        event.preventDefault();\r\n    }\r\n\r\n    render()\r\n    {\r\n        if (isAuthenticated()) {\r\n            this.props.history.push('/admin/list');\r\n            return null;\r\n        }\r\n        return (\r\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <Header as='h2' color='black' textAlign='center'>\r\n                        Zaloguj się jako administrator:\r\n                    </Header>\r\n                    <Form size='large'>\r\n                        <Segment stacked>\r\n                            <Form.Input\r\n                                fluid icon=\"user\"\r\n                                iconPosition='left'\r\n                                placeholder='Wprowadź login'\r\n                                type='text'\r\n                                value={this.state.login}\r\n                                onChange={(e) => { this.setState({ login: e.target.value }) }}\r\n                            />\r\n                            <Form.Input\r\n                                fluid icon=\"lock\"\r\n                                iconPosition='left'\r\n                                placeholder='Wprowadź hasło'\r\n                                type='password'\r\n                                value={this.state.password}\r\n                                onChange={(e) => { this.setState({ password: e.target.value }) }}\r\n                            />\r\n                            <Button onClick={this.handleSubmit} color='black' fluid size='large'>\r\n                                Zaloguj\r\n                             </Button>\r\n                        </Segment>\r\n                    </Form>\r\n                    <Message>\r\n                        Nie jesteś administratorem? <Link to={`/`}>Wróć na stronę główną</Link>\r\n                    </Message>\r\n                </Grid.Column>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nexport default Login;","import React from 'react';\r\nimport {isAuthenticated} from '../Utils/auth';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport function ProtectedRoutes({ component: Component, ...rest })\r\n{\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                isAuthenticated() ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: props.location }\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { authTokenKey } from '../Utils/auth';\r\nexport function Header()\r\n{\r\n    function logout()\r\n    {\r\n        localStorage.removeItem(authTokenKey);\r\n        window.location.href = '/login';\r\n    }\r\n\r\n    return (\r\n        <div className=\"ui menu menu-container\">\r\n            <div className=\"left\">\r\n                <div className=\"header item\">\r\n                    Panel administracyjny\r\n            </div>\r\n                <a className=\"item\" href=\"/admin/list\">\r\n                    Zbiórki\r\n                </a>\r\n                <a className=\"item\" href=\"/admin/categories\">\r\n                    Kategorie\r\n                </a>\r\n            </div>\r\n            <div className=\"right\">\r\n                <Button primary onClick={() => logout()}>Wyloguj</Button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Admin } from './Admin';\r\nimport Login from './Login';\r\nimport { ProtectedRoutes } from './ProtectedRoutes';\r\nimport '../Styles/App.css';\r\nimport { Header } from './Header';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nfunction App()\r\n{\r\n  return (\r\n    <Router>\r\n      <ToastContainer />\r\n      <Header />\r\n      <div>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/\" exact component={Login} />\r\n        <ProtectedRoutes path=\"/admin\" component={Admin} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}